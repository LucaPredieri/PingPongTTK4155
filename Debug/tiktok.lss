
tiktok.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012e  00800100  00000940  000009d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000940  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080022e  0080022e  00000b02  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013ab  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ca  00000000  00000000  00001ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007d2  00000000  00000000  000028bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00003090  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059b  00000000  00000000  00003308  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f0  00000000  00000000  000038a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003e93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0xd4>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	12 e0       	ldi	r17, 0x02	; 2
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e0 e4       	ldi	r30, 0x40	; 64
 37c:	f9 e0       	ldi	r31, 0x09	; 9
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	ae 32       	cpi	r26, 0x2E	; 46
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	22 e0       	ldi	r18, 0x02	; 2
 38c:	ae e2       	ldi	r26, 0x2E	; 46
 38e:	b2 e0       	ldi	r27, 0x02	; 2
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a8 33       	cpi	r26, 0x38	; 56
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <main>
 39e:	0c 94 9e 04 	jmp	0x93c	; 0x93c <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <uart_receive>:
	xmem_read(0x00, BASE_ADDRESS_ADC);
    xmem_read(0x00, BASE_ADDRESS_ADC);
	slider.left = xmem_read(0x00, BASE_ADDRESS_ADC)*100/255;
	slider.right = xmem_read(0x00, BASE_ADDRESS_ADC)*100/255;
	return slider;			
}
 3a6:	5f 9b       	sbis	0x0b, 7	; 11
 3a8:	03 c0       	rjmp	.+6      	; 0x3b0 <uart_receive+0xa>
 3aa:	8c b1       	in	r24, 0x0c	; 12
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	08 95       	ret
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	08 95       	ret

000003b6 <usart_putchar>:
 3b6:	5d 9b       	sbis	0x0b, 5	; 11
 3b8:	fe cf       	rjmp	.-4      	; 0x3b6 <usart_putchar>
 3ba:	8c b9       	out	0x0c, r24	; 12
 3bc:	08 95       	ret

000003be <usart_putchar_printf>:
 3be:	cf 93       	push	r28
 3c0:	c8 2f       	mov	r28, r24
 3c2:	8a 30       	cpi	r24, 0x0A	; 10
 3c4:	21 f4       	brne	.+8      	; 0x3ce <usart_putchar_printf+0x10>
 3c6:	8d e0       	ldi	r24, 0x0D	; 13
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 db 01 	call	0x3b6	; 0x3b6 <usart_putchar>
 3ce:	8c 2f       	mov	r24, r28
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <usart_putchar>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	cf 91       	pop	r28
 3dc:	08 95       	ret

000003de <uart_init>:
 3de:	10 bc       	out	0x20, r1	; 32
 3e0:	8f e1       	ldi	r24, 0x1F	; 31
 3e2:	89 b9       	out	0x09, r24	; 9
 3e4:	88 e1       	ldi	r24, 0x18	; 24
 3e6:	8a b9       	out	0x0a, r24	; 10
 3e8:	8e e8       	ldi	r24, 0x8E	; 142
 3ea:	80 bd       	out	0x20, r24	; 32
 3ec:	63 ed       	ldi	r22, 0xD3	; 211
 3ee:	71 e0       	ldi	r23, 0x01	; 1
 3f0:	8f ed       	ldi	r24, 0xDF	; 223
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	0e 94 0f 03 	call	0x61e	; 0x61e <fdevopen>
 3f8:	08 95       	ret

000003fa <xmem_init>:
 3fa:	85 b7       	in	r24, 0x35	; 53
 3fc:	80 68       	ori	r24, 0x80	; 128
 3fe:	85 bf       	out	0x35, r24	; 53
 400:	80 b7       	in	r24, 0x30	; 48
 402:	80 62       	ori	r24, 0x20	; 32
 404:	80 bf       	out	0x30, r24	; 48
 406:	08 95       	ret

00000408 <PWM_init>:
 408:	81 b3       	in	r24, 0x11	; 17
 40a:	80 61       	ori	r24, 0x10	; 16
 40c:	81 bb       	out	0x11, r24	; 17
 40e:	eb e8       	ldi	r30, 0x8B	; 139
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	80 64       	ori	r24, 0x40	; 64
 416:	80 83       	st	Z, r24
 418:	ea e8       	ldi	r30, 0x8A	; 138
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	80 81       	ld	r24, Z
 41e:	89 60       	ori	r24, 0x09	; 9
 420:	80 83       	st	Z, r24
 422:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 426:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
 42a:	08 95       	ret

0000042c <OLED_write_command>:
#define FONTSIZE 8

void OLED_write_command(uint8_t command) //volatile
{
	volatile char* base_addr=BASE_ADDRESS_OLED_COMMAND;
	base_addr[0]=command;
 42c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xdc8>
 430:	08 95       	ret

00000432 <OLED_write_data>:


void OLED_write_data(uint8_t data) //volatile
{
	volatile char* base_addr=BASE_ADDRESS_OLED_DATA;
	base_addr[0]=data;
 432:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfc8>
 436:	08 95       	ret

00000438 <OLED_init>:
}

void OLED_init()
 {
	OLED_write_command(0xae); // display off
 438:	8e ea       	ldi	r24, 0xAE	; 174
 43a:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xa1); //segment remap
 43e:	81 ea       	ldi	r24, 0xA1	; 161
 440:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0Xda); //common pads hardware: alternative
 444:	8a ed       	ldi	r24, 0xDA	; 218
 446:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x12);
 44a:	82 e1       	ldi	r24, 0x12	; 18
 44c:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xc8); //common output scan direction:com63~com0
 450:	88 ec       	ldi	r24, 0xC8	; 200
 452:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xa8); //multiplex ration mode:63
 456:	88 ea       	ldi	r24, 0xA8	; 168
 458:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x3f);
 45c:	8f e3       	ldi	r24, 0x3F	; 63
 45e:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xd5); //display divide ratio/osc. freq. mode
 462:	85 ed       	ldi	r24, 0xD5	; 213
 464:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x80);
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x81); //contrast control
 46e:	81 e8       	ldi	r24, 0x81	; 129
 470:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x50);
 474:	80 e5       	ldi	r24, 0x50	; 80
 476:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xd9); //set pre-charge period
 47a:	89 ed       	ldi	r24, 0xD9	; 217
 47c:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x21);
 480:	81 e2       	ldi	r24, 0x21	; 33
 482:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x20); //Set Memory Addressing Mode
 486:	80 e2       	ldi	r24, 0x20	; 32
 488:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x02); //THERE WAS WRITTEN 02
 48c:	82 e0       	ldi	r24, 0x02	; 2
 48e:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xdb); //VCOM deselect level mode
 492:	8b ed       	ldi	r24, 0xDB	; 219
 494:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x30);
 498:	80 e3       	ldi	r24, 0x30	; 48
 49a:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xad); //master configuration
 49e:	8d ea       	ldi	r24, 0xAD	; 173
 4a0:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x00);
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xa4); //out follows RAM content
 4aa:	84 ea       	ldi	r24, 0xA4	; 164
 4ac:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xa7); //set awesome display
 4b0:	87 ea       	ldi	r24, 0xA7	; 167
 4b2:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0xaf); // display on
 4b6:	8f ea       	ldi	r24, 0xAF	; 175
 4b8:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	   
	OLED_write_command(0xd3);
 4bc:	83 ed       	ldi	r24, 0xD3	; 211
 4be:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	OLED_write_command(0x02);
 4c2:	82 e0       	ldi	r24, 0x02	; 2
 4c4:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
 4c8:	08 95       	ret

000004ca <OLED_goto_line>:
	
} 


void OLED_goto_line(uint8_t line){
	if(line>=0 && line<8){
 4ca:	88 30       	cpi	r24, 0x08	; 8
 4cc:	18 f4       	brcc	.+6      	; 0x4d4 <OLED_goto_line+0xa>
		OLED_write_command(0xb0+line);	
 4ce:	80 55       	subi	r24, 0x50	; 80
 4d0:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
 4d4:	08 95       	ret

000004d6 <OLED_goto_col>:
	}
}

void OLED_goto_col(uint8_t column){
 4d6:	cf 93       	push	r28
	if(column>=0 && column<128){	
 4d8:	88 23       	and	r24, r24
 4da:	54 f0       	brlt	.+20     	; 0x4f0 <OLED_goto_col+0x1a>
 4dc:	c8 2f       	mov	r28, r24
		OLED_write_command(0x00+(column & 0x0F)); //set the lower column address
 4de:	8f 70       	andi	r24, 0x0F	; 15
 4e0:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
		OLED_write_command(0x10+((column & 0xF0) >> 4)); //set the upper column address
 4e4:	8c 2f       	mov	r24, r28
 4e6:	82 95       	swap	r24
 4e8:	8f 70       	andi	r24, 0x0F	; 15
 4ea:	80 5f       	subi	r24, 0xF0	; 240
 4ec:	0e 94 16 02 	call	0x42c	; 0x42c <OLED_write_command>
	}
}
 4f0:	cf 91       	pop	r28
 4f2:	08 95       	ret

000004f4 <OLED_goto_pos>:


void OLED_goto_pos(uint8_t line, uint8_t column){
 4f4:	cf 93       	push	r28
 4f6:	c6 2f       	mov	r28, r22
	OLED_goto_line(line);
 4f8:	0e 94 65 02 	call	0x4ca	; 0x4ca <OLED_goto_line>
	OLED_goto_col(column);
 4fc:	8c 2f       	mov	r24, r28
 4fe:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <OLED_goto_col>
}
 502:	cf 91       	pop	r28
 504:	08 95       	ret

00000506 <OLED_clear>:

void OLED_clear(){
 506:	cf 93       	push	r28
 508:	df 93       	push	r29
	for(uint8_t i=0;i<N_ROWS;i++){
 50a:	d0 e0       	ldi	r29, 0x00	; 0
 50c:	0d c0       	rjmp	.+26     	; 0x528 <OLED_clear+0x22>
		OLED_goto_pos(i,0);
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	8d 2f       	mov	r24, r29
 512:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_goto_pos>
		for(uint8_t j=0;j<N_COLS;j++){
 516:	c0 e0       	ldi	r28, 0x00	; 0
 518:	04 c0       	rjmp	.+8      	; 0x522 <OLED_clear+0x1c>
			OLED_write_data(0x00);
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
}

void OLED_clear(){
	for(uint8_t i=0;i<N_ROWS;i++){
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<N_COLS;j++){
 520:	cf 5f       	subi	r28, 0xFF	; 255
 522:	cc 23       	and	r28, r28
 524:	d4 f7       	brge	.-12     	; 0x51a <OLED_clear+0x14>
	OLED_goto_line(line);
	OLED_goto_col(column);
}

void OLED_clear(){
	for(uint8_t i=0;i<N_ROWS;i++){
 526:	df 5f       	subi	r29, 0xFF	; 255
 528:	d8 30       	cpi	r29, 0x08	; 8
 52a:	88 f3       	brcs	.-30     	; 0x50e <OLED_clear+0x8>
		OLED_goto_pos(i,0);
		for(uint8_t j=0;j<N_COLS;j++){
			OLED_write_data(0x00);
		}		
	}
}
 52c:	df 91       	pop	r29
 52e:	cf 91       	pop	r28
 530:	08 95       	ret

00000532 <OLED_print_arrow>:

void OLED_print_arrow(uint8_t row, uint8_t col){
	
	
	OLED_goto_pos(row,col);
 532:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_goto_pos>
	OLED_write_data(0b00011000);
 536:	88 e1       	ldi	r24, 0x18	; 24
 538:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
	OLED_write_data(0b00011000);
 53c:	88 e1       	ldi	r24, 0x18	; 24
 53e:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
	OLED_write_data(0b01111110);
 542:	8e e7       	ldi	r24, 0x7E	; 126
 544:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
	OLED_write_data(0b00111100);
 548:	8c e3       	ldi	r24, 0x3C	; 60
 54a:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
	OLED_write_data(0b00011000);
 54e:	88 e1       	ldi	r24, 0x18	; 24
 550:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
 554:	08 95       	ret

00000556 <OLED_print_char>:
	
}

void OLED_print_char(char c){
 556:	cf 93       	push	r28
 558:	df 93       	push	r29
 55a:	d8 2f       	mov	r29, r24
	for(uint8_t i=0; i<FONTSIZE; i++){
 55c:	c0 e0       	ldi	r28, 0x00	; 0
 55e:	11 c0       	rjmp	.+34     	; 0x582 <OLED_print_char+0x2c>
		uint8_t byte = pgm_read_byte(&(font8[c - 32][i]));
 560:	ed 2f       	mov	r30, r29
 562:	f0 e0       	ldi	r31, 0x00	; 0
 564:	b0 97       	sbiw	r30, 0x20	; 32
 566:	ee 0f       	add	r30, r30
 568:	ff 1f       	adc	r31, r31
 56a:	ee 0f       	add	r30, r30
 56c:	ff 1f       	adc	r31, r31
 56e:	ee 0f       	add	r30, r30
 570:	ff 1f       	adc	r31, r31
 572:	ec 0f       	add	r30, r28
 574:	f1 1d       	adc	r31, r1
 576:	e0 59       	subi	r30, 0x90	; 144
 578:	ff 4f       	sbci	r31, 0xFF	; 255
 57a:	84 91       	lpm	r24, Z
		OLED_write_data(byte);
 57c:	0e 94 19 02 	call	0x432	; 0x432 <OLED_write_data>
	OLED_write_data(0b00011000);
	
}

void OLED_print_char(char c){
	for(uint8_t i=0; i<FONTSIZE; i++){
 580:	cf 5f       	subi	r28, 0xFF	; 255
 582:	c8 30       	cpi	r28, 0x08	; 8
 584:	68 f3       	brcs	.-38     	; 0x560 <OLED_print_char+0xa>
		uint8_t byte = pgm_read_byte(&(font8[c - 32][i]));
		OLED_write_data(byte);
	}
}
 586:	df 91       	pop	r29
 588:	cf 91       	pop	r28
 58a:	08 95       	ret

0000058c <OLED_print_string>:


void OLED_print_string(const char * str){	 
 58c:	0f 93       	push	r16
 58e:	1f 93       	push	r17
 590:	cf 93       	push	r28
 592:	8c 01       	movw	r16, r24
	 uint8_t i=0;
 594:	c0 e0       	ldi	r28, 0x00	; 0
	 while(str[i]!= '\0'){
 596:	03 c0       	rjmp	.+6      	; 0x59e <OLED_print_string+0x12>
		 OLED_print_char(str[i]);
 598:	0e 94 ab 02 	call	0x556	; 0x556 <OLED_print_char>
		 i++; 
 59c:	cf 5f       	subi	r28, 0xFF	; 255
}


void OLED_print_string(const char * str){	 
	 uint8_t i=0;
	 while(str[i]!= '\0'){
 59e:	f8 01       	movw	r30, r16
 5a0:	ec 0f       	add	r30, r28
 5a2:	f1 1d       	adc	r31, r1
 5a4:	80 81       	ld	r24, Z
 5a6:	81 11       	cpse	r24, r1
 5a8:	f7 cf       	rjmp	.-18     	; 0x598 <OLED_print_string+0xc>
		 OLED_print_char(str[i]);
		 i++; 
	 }
	
	
 5aa:	cf 91       	pop	r28
 5ac:	1f 91       	pop	r17
 5ae:	0f 91       	pop	r16
 5b0:	08 95       	ret

000005b2 <main_menu_init>:

void main_menu_init(void){
	OLED_clear();
 5b2:	0e 94 83 02 	call	0x506	; 0x506 <OLED_clear>
	OLED_goto_pos(1,8);
 5b6:	68 e0       	ldi	r22, 0x08	; 8
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_goto_pos>
	OLED_print_string("PING PONG GAME");
 5be:	84 e1       	ldi	r24, 0x14	; 20
 5c0:	92 e0       	ldi	r25, 0x02	; 2
 5c2:	0e 94 c6 02 	call	0x58c	; 0x58c <OLED_print_string>
	OLED_print_arrow(3,15);	
 5c6:	6f e0       	ldi	r22, 0x0F	; 15
 5c8:	83 e0       	ldi	r24, 0x03	; 3
 5ca:	0e 94 99 02 	call	0x532	; 0x532 <OLED_print_arrow>
	OLED_goto_pos(3,32);
 5ce:	60 e2       	ldi	r22, 0x20	; 32
 5d0:	83 e0       	ldi	r24, 0x03	; 3
 5d2:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_goto_pos>
	OLED_print_string("Play");
 5d6:	83 e2       	ldi	r24, 0x23	; 35
 5d8:	92 e0       	ldi	r25, 0x02	; 2
 5da:	0e 94 c6 02 	call	0x58c	; 0x58c <OLED_print_string>
	OLED_goto_pos(5,32);
 5de:	60 e2       	ldi	r22, 0x20	; 32
 5e0:	85 e0       	ldi	r24, 0x05	; 5
 5e2:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_goto_pos>
	OLED_print_string("Quit");
 5e6:	88 e2       	ldi	r24, 0x28	; 40
 5e8:	92 e0       	ldi	r25, 0x02	; 2
 5ea:	0e 94 c6 02 	call	0x58c	; 0x58c <OLED_print_string>
 5ee:	08 95       	ret

000005f0 <main>:
#include "OLED.h"
#include "GUI.h"


int main(){
	uart_init(9600);
 5f0:	80 e8       	ldi	r24, 0x80	; 128
 5f2:	95 e2       	ldi	r25, 0x25	; 37
 5f4:	0e 94 ef 01 	call	0x3de	; 0x3de <uart_init>
	stdout = &mystdout;
 5f8:	86 e0       	ldi	r24, 0x06	; 6
 5fa:	91 e0       	ldi	r25, 0x01	; 1
 5fc:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <__data_end+0x3>
 600:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end+0x2>
	xmem_init();
 604:	0e 94 fd 01 	call	0x3fa	; 0x3fa <xmem_init>
	PWM_init();
 608:	0e 94 04 02 	call	0x408	; 0x408 <PWM_init>
	OLED_init();
 60c:	0e 94 1c 02 	call	0x438	; 0x438 <OLED_init>
	OLED_clear();
 610:	0e 94 83 02 	call	0x506	; 0x506 <OLED_clear>
	main_menu_init();
 614:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <main_menu_init>
	
	//char d = 'd';
	//OLED_goto_pos(3,4);
	//char* stringa="renato ugo";
	//OLED_print_string(stringa);
}
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	08 95       	ret

0000061e <fdevopen>:
 61e:	0f 93       	push	r16
 620:	1f 93       	push	r17
 622:	cf 93       	push	r28
 624:	df 93       	push	r29
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	31 f4       	brne	.+12     	; 0x636 <fdevopen+0x18>
 62a:	61 15       	cp	r22, r1
 62c:	71 05       	cpc	r23, r1
 62e:	19 f4       	brne	.+6      	; 0x636 <fdevopen+0x18>
 630:	80 e0       	ldi	r24, 0x00	; 0
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	3a c0       	rjmp	.+116    	; 0x6aa <fdevopen+0x8c>
 636:	8b 01       	movw	r16, r22
 638:	ec 01       	movw	r28, r24
 63a:	6e e0       	ldi	r22, 0x0E	; 14
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	81 e0       	ldi	r24, 0x01	; 1
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <calloc>
 646:	fc 01       	movw	r30, r24
 648:	89 2b       	or	r24, r25
 64a:	91 f3       	breq	.-28     	; 0x630 <fdevopen+0x12>
 64c:	80 e8       	ldi	r24, 0x80	; 128
 64e:	83 83       	std	Z+3, r24	; 0x03
 650:	01 15       	cp	r16, r1
 652:	11 05       	cpc	r17, r1
 654:	71 f0       	breq	.+28     	; 0x672 <fdevopen+0x54>
 656:	13 87       	std	Z+11, r17	; 0x0b
 658:	02 87       	std	Z+10, r16	; 0x0a
 65a:	81 e8       	ldi	r24, 0x81	; 129
 65c:	83 83       	std	Z+3, r24	; 0x03
 65e:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <__data_end>
 662:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <__data_end+0x1>
 666:	89 2b       	or	r24, r25
 668:	21 f4       	brne	.+8      	; 0x672 <fdevopen+0x54>
 66a:	f0 93 2f 02 	sts	0x022F, r31	; 0x80022f <__data_end+0x1>
 66e:	e0 93 2e 02 	sts	0x022E, r30	; 0x80022e <__data_end>
 672:	20 97       	sbiw	r28, 0x00	; 0
 674:	c9 f0       	breq	.+50     	; 0x6a8 <fdevopen+0x8a>
 676:	d1 87       	std	Z+9, r29	; 0x09
 678:	c0 87       	std	Z+8, r28	; 0x08
 67a:	83 81       	ldd	r24, Z+3	; 0x03
 67c:	82 60       	ori	r24, 0x02	; 2
 67e:	83 83       	std	Z+3, r24	; 0x03
 680:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end+0x2>
 684:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <__data_end+0x3>
 688:	89 2b       	or	r24, r25
 68a:	71 f4       	brne	.+28     	; 0x6a8 <fdevopen+0x8a>
 68c:	f0 93 31 02 	sts	0x0231, r31	; 0x800231 <__data_end+0x3>
 690:	e0 93 30 02 	sts	0x0230, r30	; 0x800230 <__data_end+0x2>
 694:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end+0x4>
 698:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x5>
 69c:	89 2b       	or	r24, r25
 69e:	21 f4       	brne	.+8      	; 0x6a8 <fdevopen+0x8a>
 6a0:	f0 93 33 02 	sts	0x0233, r31	; 0x800233 <__data_end+0x5>
 6a4:	e0 93 32 02 	sts	0x0232, r30	; 0x800232 <__data_end+0x4>
 6a8:	cf 01       	movw	r24, r30
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	1f 91       	pop	r17
 6b0:	0f 91       	pop	r16
 6b2:	08 95       	ret

000006b4 <calloc>:
 6b4:	0f 93       	push	r16
 6b6:	1f 93       	push	r17
 6b8:	cf 93       	push	r28
 6ba:	df 93       	push	r29
 6bc:	86 9f       	mul	r24, r22
 6be:	80 01       	movw	r16, r0
 6c0:	87 9f       	mul	r24, r23
 6c2:	10 0d       	add	r17, r0
 6c4:	96 9f       	mul	r25, r22
 6c6:	10 0d       	add	r17, r0
 6c8:	11 24       	eor	r1, r1
 6ca:	c8 01       	movw	r24, r16
 6cc:	0e 94 76 03 	call	0x6ec	; 0x6ec <malloc>
 6d0:	ec 01       	movw	r28, r24
 6d2:	00 97       	sbiw	r24, 0x00	; 0
 6d4:	29 f0       	breq	.+10     	; 0x6e0 <calloc+0x2c>
 6d6:	a8 01       	movw	r20, r16
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	0e 94 97 04 	call	0x92e	; 0x92e <memset>
 6e0:	ce 01       	movw	r24, r28
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	08 95       	ret

000006ec <malloc>:
 6ec:	0f 93       	push	r16
 6ee:	1f 93       	push	r17
 6f0:	cf 93       	push	r28
 6f2:	df 93       	push	r29
 6f4:	82 30       	cpi	r24, 0x02	; 2
 6f6:	91 05       	cpc	r25, r1
 6f8:	10 f4       	brcc	.+4      	; 0x6fe <malloc+0x12>
 6fa:	82 e0       	ldi	r24, 0x02	; 2
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <__flp>
 702:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <__flp+0x1>
 706:	20 e0       	ldi	r18, 0x00	; 0
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	a0 e0       	ldi	r26, 0x00	; 0
 70c:	b0 e0       	ldi	r27, 0x00	; 0
 70e:	30 97       	sbiw	r30, 0x00	; 0
 710:	19 f1       	breq	.+70     	; 0x758 <malloc+0x6c>
 712:	40 81       	ld	r20, Z
 714:	51 81       	ldd	r21, Z+1	; 0x01
 716:	02 81       	ldd	r16, Z+2	; 0x02
 718:	13 81       	ldd	r17, Z+3	; 0x03
 71a:	48 17       	cp	r20, r24
 71c:	59 07       	cpc	r21, r25
 71e:	c8 f0       	brcs	.+50     	; 0x752 <malloc+0x66>
 720:	84 17       	cp	r24, r20
 722:	95 07       	cpc	r25, r21
 724:	69 f4       	brne	.+26     	; 0x740 <malloc+0x54>
 726:	10 97       	sbiw	r26, 0x00	; 0
 728:	31 f0       	breq	.+12     	; 0x736 <malloc+0x4a>
 72a:	12 96       	adiw	r26, 0x02	; 2
 72c:	0c 93       	st	X, r16
 72e:	12 97       	sbiw	r26, 0x02	; 2
 730:	13 96       	adiw	r26, 0x03	; 3
 732:	1c 93       	st	X, r17
 734:	27 c0       	rjmp	.+78     	; 0x784 <malloc+0x98>
 736:	00 93 36 02 	sts	0x0236, r16	; 0x800236 <__flp>
 73a:	10 93 37 02 	sts	0x0237, r17	; 0x800237 <__flp+0x1>
 73e:	22 c0       	rjmp	.+68     	; 0x784 <malloc+0x98>
 740:	21 15       	cp	r18, r1
 742:	31 05       	cpc	r19, r1
 744:	19 f0       	breq	.+6      	; 0x74c <malloc+0x60>
 746:	42 17       	cp	r20, r18
 748:	53 07       	cpc	r21, r19
 74a:	18 f4       	brcc	.+6      	; 0x752 <malloc+0x66>
 74c:	9a 01       	movw	r18, r20
 74e:	bd 01       	movw	r22, r26
 750:	ef 01       	movw	r28, r30
 752:	df 01       	movw	r26, r30
 754:	f8 01       	movw	r30, r16
 756:	db cf       	rjmp	.-74     	; 0x70e <malloc+0x22>
 758:	21 15       	cp	r18, r1
 75a:	31 05       	cpc	r19, r1
 75c:	f9 f0       	breq	.+62     	; 0x79c <malloc+0xb0>
 75e:	28 1b       	sub	r18, r24
 760:	39 0b       	sbc	r19, r25
 762:	24 30       	cpi	r18, 0x04	; 4
 764:	31 05       	cpc	r19, r1
 766:	80 f4       	brcc	.+32     	; 0x788 <malloc+0x9c>
 768:	8a 81       	ldd	r24, Y+2	; 0x02
 76a:	9b 81       	ldd	r25, Y+3	; 0x03
 76c:	61 15       	cp	r22, r1
 76e:	71 05       	cpc	r23, r1
 770:	21 f0       	breq	.+8      	; 0x77a <malloc+0x8e>
 772:	fb 01       	movw	r30, r22
 774:	93 83       	std	Z+3, r25	; 0x03
 776:	82 83       	std	Z+2, r24	; 0x02
 778:	04 c0       	rjmp	.+8      	; 0x782 <malloc+0x96>
 77a:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <__flp+0x1>
 77e:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <__flp>
 782:	fe 01       	movw	r30, r28
 784:	32 96       	adiw	r30, 0x02	; 2
 786:	44 c0       	rjmp	.+136    	; 0x810 <malloc+0x124>
 788:	fe 01       	movw	r30, r28
 78a:	e2 0f       	add	r30, r18
 78c:	f3 1f       	adc	r31, r19
 78e:	81 93       	st	Z+, r24
 790:	91 93       	st	Z+, r25
 792:	22 50       	subi	r18, 0x02	; 2
 794:	31 09       	sbc	r19, r1
 796:	39 83       	std	Y+1, r19	; 0x01
 798:	28 83       	st	Y, r18
 79a:	3a c0       	rjmp	.+116    	; 0x810 <malloc+0x124>
 79c:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <__brkval>
 7a0:	30 91 35 02 	lds	r19, 0x0235	; 0x800235 <__brkval+0x1>
 7a4:	23 2b       	or	r18, r19
 7a6:	41 f4       	brne	.+16     	; 0x7b8 <malloc+0xcc>
 7a8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 7ac:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 7b0:	30 93 35 02 	sts	0x0235, r19	; 0x800235 <__brkval+0x1>
 7b4:	20 93 34 02 	sts	0x0234, r18	; 0x800234 <__brkval>
 7b8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7bc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7c0:	21 15       	cp	r18, r1
 7c2:	31 05       	cpc	r19, r1
 7c4:	41 f4       	brne	.+16     	; 0x7d6 <malloc+0xea>
 7c6:	2d b7       	in	r18, 0x3d	; 61
 7c8:	3e b7       	in	r19, 0x3e	; 62
 7ca:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 7ce:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 7d2:	24 1b       	sub	r18, r20
 7d4:	35 0b       	sbc	r19, r21
 7d6:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <__brkval>
 7da:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <__brkval+0x1>
 7de:	e2 17       	cp	r30, r18
 7e0:	f3 07       	cpc	r31, r19
 7e2:	a0 f4       	brcc	.+40     	; 0x80c <malloc+0x120>
 7e4:	2e 1b       	sub	r18, r30
 7e6:	3f 0b       	sbc	r19, r31
 7e8:	28 17       	cp	r18, r24
 7ea:	39 07       	cpc	r19, r25
 7ec:	78 f0       	brcs	.+30     	; 0x80c <malloc+0x120>
 7ee:	ac 01       	movw	r20, r24
 7f0:	4e 5f       	subi	r20, 0xFE	; 254
 7f2:	5f 4f       	sbci	r21, 0xFF	; 255
 7f4:	24 17       	cp	r18, r20
 7f6:	35 07       	cpc	r19, r21
 7f8:	48 f0       	brcs	.+18     	; 0x80c <malloc+0x120>
 7fa:	4e 0f       	add	r20, r30
 7fc:	5f 1f       	adc	r21, r31
 7fe:	50 93 35 02 	sts	0x0235, r21	; 0x800235 <__brkval+0x1>
 802:	40 93 34 02 	sts	0x0234, r20	; 0x800234 <__brkval>
 806:	81 93       	st	Z+, r24
 808:	91 93       	st	Z+, r25
 80a:	02 c0       	rjmp	.+4      	; 0x810 <malloc+0x124>
 80c:	e0 e0       	ldi	r30, 0x00	; 0
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	cf 01       	movw	r24, r30
 812:	df 91       	pop	r29
 814:	cf 91       	pop	r28
 816:	1f 91       	pop	r17
 818:	0f 91       	pop	r16
 81a:	08 95       	ret

0000081c <free>:
 81c:	cf 93       	push	r28
 81e:	df 93       	push	r29
 820:	00 97       	sbiw	r24, 0x00	; 0
 822:	09 f4       	brne	.+2      	; 0x826 <free+0xa>
 824:	81 c0       	rjmp	.+258    	; 0x928 <free+0x10c>
 826:	fc 01       	movw	r30, r24
 828:	32 97       	sbiw	r30, 0x02	; 2
 82a:	13 82       	std	Z+3, r1	; 0x03
 82c:	12 82       	std	Z+2, r1	; 0x02
 82e:	a0 91 36 02 	lds	r26, 0x0236	; 0x800236 <__flp>
 832:	b0 91 37 02 	lds	r27, 0x0237	; 0x800237 <__flp+0x1>
 836:	10 97       	sbiw	r26, 0x00	; 0
 838:	81 f4       	brne	.+32     	; 0x85a <free+0x3e>
 83a:	20 81       	ld	r18, Z
 83c:	31 81       	ldd	r19, Z+1	; 0x01
 83e:	82 0f       	add	r24, r18
 840:	93 1f       	adc	r25, r19
 842:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <__brkval>
 846:	30 91 35 02 	lds	r19, 0x0235	; 0x800235 <__brkval+0x1>
 84a:	28 17       	cp	r18, r24
 84c:	39 07       	cpc	r19, r25
 84e:	51 f5       	brne	.+84     	; 0x8a4 <free+0x88>
 850:	f0 93 35 02 	sts	0x0235, r31	; 0x800235 <__brkval+0x1>
 854:	e0 93 34 02 	sts	0x0234, r30	; 0x800234 <__brkval>
 858:	67 c0       	rjmp	.+206    	; 0x928 <free+0x10c>
 85a:	ed 01       	movw	r28, r26
 85c:	20 e0       	ldi	r18, 0x00	; 0
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	ce 17       	cp	r28, r30
 862:	df 07       	cpc	r29, r31
 864:	40 f4       	brcc	.+16     	; 0x876 <free+0x5a>
 866:	4a 81       	ldd	r20, Y+2	; 0x02
 868:	5b 81       	ldd	r21, Y+3	; 0x03
 86a:	9e 01       	movw	r18, r28
 86c:	41 15       	cp	r20, r1
 86e:	51 05       	cpc	r21, r1
 870:	f1 f0       	breq	.+60     	; 0x8ae <free+0x92>
 872:	ea 01       	movw	r28, r20
 874:	f5 cf       	rjmp	.-22     	; 0x860 <free+0x44>
 876:	d3 83       	std	Z+3, r29	; 0x03
 878:	c2 83       	std	Z+2, r28	; 0x02
 87a:	40 81       	ld	r20, Z
 87c:	51 81       	ldd	r21, Z+1	; 0x01
 87e:	84 0f       	add	r24, r20
 880:	95 1f       	adc	r25, r21
 882:	c8 17       	cp	r28, r24
 884:	d9 07       	cpc	r29, r25
 886:	59 f4       	brne	.+22     	; 0x89e <free+0x82>
 888:	88 81       	ld	r24, Y
 88a:	99 81       	ldd	r25, Y+1	; 0x01
 88c:	84 0f       	add	r24, r20
 88e:	95 1f       	adc	r25, r21
 890:	02 96       	adiw	r24, 0x02	; 2
 892:	91 83       	std	Z+1, r25	; 0x01
 894:	80 83       	st	Z, r24
 896:	8a 81       	ldd	r24, Y+2	; 0x02
 898:	9b 81       	ldd	r25, Y+3	; 0x03
 89a:	93 83       	std	Z+3, r25	; 0x03
 89c:	82 83       	std	Z+2, r24	; 0x02
 89e:	21 15       	cp	r18, r1
 8a0:	31 05       	cpc	r19, r1
 8a2:	29 f4       	brne	.+10     	; 0x8ae <free+0x92>
 8a4:	f0 93 37 02 	sts	0x0237, r31	; 0x800237 <__flp+0x1>
 8a8:	e0 93 36 02 	sts	0x0236, r30	; 0x800236 <__flp>
 8ac:	3d c0       	rjmp	.+122    	; 0x928 <free+0x10c>
 8ae:	e9 01       	movw	r28, r18
 8b0:	fb 83       	std	Y+3, r31	; 0x03
 8b2:	ea 83       	std	Y+2, r30	; 0x02
 8b4:	49 91       	ld	r20, Y+
 8b6:	59 91       	ld	r21, Y+
 8b8:	c4 0f       	add	r28, r20
 8ba:	d5 1f       	adc	r29, r21
 8bc:	ec 17       	cp	r30, r28
 8be:	fd 07       	cpc	r31, r29
 8c0:	61 f4       	brne	.+24     	; 0x8da <free+0xbe>
 8c2:	80 81       	ld	r24, Z
 8c4:	91 81       	ldd	r25, Z+1	; 0x01
 8c6:	84 0f       	add	r24, r20
 8c8:	95 1f       	adc	r25, r21
 8ca:	02 96       	adiw	r24, 0x02	; 2
 8cc:	e9 01       	movw	r28, r18
 8ce:	99 83       	std	Y+1, r25	; 0x01
 8d0:	88 83       	st	Y, r24
 8d2:	82 81       	ldd	r24, Z+2	; 0x02
 8d4:	93 81       	ldd	r25, Z+3	; 0x03
 8d6:	9b 83       	std	Y+3, r25	; 0x03
 8d8:	8a 83       	std	Y+2, r24	; 0x02
 8da:	e0 e0       	ldi	r30, 0x00	; 0
 8dc:	f0 e0       	ldi	r31, 0x00	; 0
 8de:	12 96       	adiw	r26, 0x02	; 2
 8e0:	8d 91       	ld	r24, X+
 8e2:	9c 91       	ld	r25, X
 8e4:	13 97       	sbiw	r26, 0x03	; 3
 8e6:	00 97       	sbiw	r24, 0x00	; 0
 8e8:	19 f0       	breq	.+6      	; 0x8f0 <free+0xd4>
 8ea:	fd 01       	movw	r30, r26
 8ec:	dc 01       	movw	r26, r24
 8ee:	f7 cf       	rjmp	.-18     	; 0x8de <free+0xc2>
 8f0:	8d 91       	ld	r24, X+
 8f2:	9c 91       	ld	r25, X
 8f4:	11 97       	sbiw	r26, 0x01	; 1
 8f6:	9d 01       	movw	r18, r26
 8f8:	2e 5f       	subi	r18, 0xFE	; 254
 8fa:	3f 4f       	sbci	r19, 0xFF	; 255
 8fc:	82 0f       	add	r24, r18
 8fe:	93 1f       	adc	r25, r19
 900:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <__brkval>
 904:	30 91 35 02 	lds	r19, 0x0235	; 0x800235 <__brkval+0x1>
 908:	28 17       	cp	r18, r24
 90a:	39 07       	cpc	r19, r25
 90c:	69 f4       	brne	.+26     	; 0x928 <free+0x10c>
 90e:	30 97       	sbiw	r30, 0x00	; 0
 910:	29 f4       	brne	.+10     	; 0x91c <free+0x100>
 912:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__flp+0x1>
 916:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__flp>
 91a:	02 c0       	rjmp	.+4      	; 0x920 <free+0x104>
 91c:	13 82       	std	Z+3, r1	; 0x03
 91e:	12 82       	std	Z+2, r1	; 0x02
 920:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <__brkval+0x1>
 924:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <__brkval>
 928:	df 91       	pop	r29
 92a:	cf 91       	pop	r28
 92c:	08 95       	ret

0000092e <memset>:
 92e:	dc 01       	movw	r26, r24
 930:	01 c0       	rjmp	.+2      	; 0x934 <memset+0x6>
 932:	6d 93       	st	X+, r22
 934:	41 50       	subi	r20, 0x01	; 1
 936:	50 40       	sbci	r21, 0x00	; 0
 938:	e0 f7       	brcc	.-8      	; 0x932 <memset+0x4>
 93a:	08 95       	ret

0000093c <_exit>:
 93c:	f8 94       	cli

0000093e <__stop_program>:
 93e:	ff cf       	rjmp	.-2      	; 0x93e <__stop_program>
