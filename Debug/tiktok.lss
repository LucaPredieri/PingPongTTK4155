
tiktok.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004a8  0000053c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  00000542  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000542  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000574  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000789  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c1  00000000  00000000  00000d71  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000294  00000000  00000000  00001432  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000016c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000377  00000000  00000000  0000171c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000005d  00000000  00000000  00001a93  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 ea       	ldi	r30, 0xA8	; 168
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  a6:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <uart_transmit>:
	UCSR0C = (1<<USBS0) | (1<<URSEL0) | (3<<UCSZ00);
	fdevopen(uart_transmit,uart_receive);
}

int uart_transmit(char data){
	while(!(UCSR0A & (1<<UDRE0))){
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <uart_transmit>
		//While the flag is off
	}
	//send message
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	08 95       	ret

000000ba <uart_receive>:


int uart_receive(){
	if(!(UCSR0A & (1<<RXC0))){
  ba:	5f 9b       	sbis	0x0b, 7	; 11
  bc:	03 c0       	rjmp	.+6      	; 0xc4 <uart_receive+0xa>
		return 0;
	}
	return UDR0;
  be:	8c b1       	in	r24, 0x0c	; 12
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	08 95       	ret
}


int uart_receive(){
	if(!(UCSR0A & (1<<RXC0))){
		return 0;
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	90 e0       	ldi	r25, 0x00	; 0
	}
	return UDR0;
}
  c8:	08 95       	ret

000000ca <uart_init>:
#endif

void uart_init(unsigned int baud){
	int bd = 31;
	//set baud rate
	UBRR0H = (bd>>8);
  ca:	10 bc       	out	0x20, r1	; 32
	UBRR0L = bd;
  cc:	8f e1       	ldi	r24, 0x1F	; 31
  ce:	89 b9       	out	0x09, r24	; 9
	//Enable r/t
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
  d0:	88 e1       	ldi	r24, 0x18	; 24
  d2:	8a b9       	out	0x0a, r24	; 10
	//set frame format
	UCSR0C = (1<<USBS0) | (1<<URSEL0) | (3<<UCSZ00);
  d4:	8e e8       	ldi	r24, 0x8E	; 142
  d6:	80 bd       	out	0x20, r24	; 32
	fdevopen(uart_transmit,uart_receive);
  d8:	6d e5       	ldi	r22, 0x5D	; 93
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	87 e5       	ldi	r24, 0x57	; 87
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 80 00 	call	0x100	; 0x100 <fdevopen>
  e4:	08 95       	ret

000000e6 <main>:
	return UDR0;
}

	
int main(){
	uart_init(9600);
  e6:	80 e8       	ldi	r24, 0x80	; 128
  e8:	95 e2       	ldi	r25, 0x25	; 37
  ea:	0e 94 65 00 	call	0xca	; 0xca <uart_init>
	while(1){
		char data = 'd';
		uart_transmit(data);
  ee:	84 e6       	ldi	r24, 0x64	; 100
  f0:	0e 94 57 00 	call	0xae	; 0xae <uart_transmit>
		int out = uart_receive();
  f4:	0e 94 5d 00 	call	0xba	; 0xba <uart_receive>
		printf("%c" , (char)out);
  f8:	99 27       	eor	r25, r25
  fa:	0e 94 cb 00 	call	0x196	; 0x196 <putchar>
  fe:	f7 cf       	rjmp	.-18     	; 0xee <main+0x8>

00000100 <fdevopen>:
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	00 97       	sbiw	r24, 0x00	; 0
 10a:	31 f4       	brne	.+12     	; 0x118 <fdevopen+0x18>
 10c:	61 15       	cp	r22, r1
 10e:	71 05       	cpc	r23, r1
 110:	19 f4       	brne	.+6      	; 0x118 <fdevopen+0x18>
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	3a c0       	rjmp	.+116    	; 0x18c <fdevopen+0x8c>
 118:	8b 01       	movw	r16, r22
 11a:	ec 01       	movw	r28, r24
 11c:	6e e0       	ldi	r22, 0x0E	; 14
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <calloc>
 128:	fc 01       	movw	r30, r24
 12a:	89 2b       	or	r24, r25
 12c:	91 f3       	breq	.-28     	; 0x112 <fdevopen+0x12>
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	83 83       	std	Z+3, r24	; 0x03
 132:	01 15       	cp	r16, r1
 134:	11 05       	cpc	r17, r1
 136:	71 f0       	breq	.+28     	; 0x154 <fdevopen+0x54>
 138:	13 87       	std	Z+11, r17	; 0x0b
 13a:	02 87       	std	Z+10, r16	; 0x0a
 13c:	81 e8       	ldi	r24, 0x81	; 129
 13e:	83 83       	std	Z+3, r24	; 0x03
 140:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 144:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 148:	89 2b       	or	r24, r25
 14a:	21 f4       	brne	.+8      	; 0x154 <fdevopen+0x54>
 14c:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 150:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 154:	20 97       	sbiw	r28, 0x00	; 0
 156:	c9 f0       	breq	.+50     	; 0x18a <fdevopen+0x8a>
 158:	d1 87       	std	Z+9, r29	; 0x09
 15a:	c0 87       	std	Z+8, r28	; 0x08
 15c:	83 81       	ldd	r24, Z+3	; 0x03
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	83 83       	std	Z+3, r24	; 0x03
 162:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
 166:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
 16a:	89 2b       	or	r24, r25
 16c:	71 f4       	brne	.+28     	; 0x18a <fdevopen+0x8a>
 16e:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x3>
 172:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end+0x2>
 176:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end+0x4>
 17a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x5>
 17e:	89 2b       	or	r24, r25
 180:	21 f4       	brne	.+8      	; 0x18a <fdevopen+0x8a>
 182:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x5>
 186:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end+0x4>
 18a:	cf 01       	movw	r24, r30
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	08 95       	ret

00000196 <putchar>:
 196:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <__data_end+0x2>
 19a:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <__data_end+0x3>
 19e:	0e 94 16 02 	call	0x42c	; 0x42c <fputc>
 1a2:	08 95       	ret

000001a4 <calloc>:
 1a4:	0f 93       	push	r16
 1a6:	1f 93       	push	r17
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	86 9f       	mul	r24, r22
 1ae:	80 01       	movw	r16, r0
 1b0:	87 9f       	mul	r24, r23
 1b2:	10 0d       	add	r17, r0
 1b4:	96 9f       	mul	r25, r22
 1b6:	10 0d       	add	r17, r0
 1b8:	11 24       	eor	r1, r1
 1ba:	c8 01       	movw	r24, r16
 1bc:	0e 94 ee 00 	call	0x1dc	; 0x1dc <malloc>
 1c0:	ec 01       	movw	r28, r24
 1c2:	00 97       	sbiw	r24, 0x00	; 0
 1c4:	29 f0       	breq	.+10     	; 0x1d0 <calloc+0x2c>
 1c6:	a8 01       	movw	r20, r16
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	0e 94 0f 02 	call	0x41e	; 0x41e <memset>
 1d0:	ce 01       	movw	r24, r28
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	08 95       	ret

000001dc <malloc>:
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	82 30       	cpi	r24, 0x02	; 2
 1e6:	91 05       	cpc	r25, r1
 1e8:	10 f4       	brcc	.+4      	; 0x1ee <malloc+0x12>
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__flp>
 1f2:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__flp+0x1>
 1f6:	20 e0       	ldi	r18, 0x00	; 0
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	a0 e0       	ldi	r26, 0x00	; 0
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	30 97       	sbiw	r30, 0x00	; 0
 200:	19 f1       	breq	.+70     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
 202:	40 81       	ld	r20, Z
 204:	51 81       	ldd	r21, Z+1	; 0x01
 206:	02 81       	ldd	r16, Z+2	; 0x02
 208:	13 81       	ldd	r17, Z+3	; 0x03
 20a:	48 17       	cp	r20, r24
 20c:	59 07       	cpc	r21, r25
 20e:	c8 f0       	brcs	.+50     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 210:	84 17       	cp	r24, r20
 212:	95 07       	cpc	r25, r21
 214:	69 f4       	brne	.+26     	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
 216:	10 97       	sbiw	r26, 0x00	; 0
 218:	31 f0       	breq	.+12     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
 21a:	12 96       	adiw	r26, 0x02	; 2
 21c:	0c 93       	st	X, r16
 21e:	12 97       	sbiw	r26, 0x02	; 2
 220:	13 96       	adiw	r26, 0x03	; 3
 222:	1c 93       	st	X, r17
 224:	27 c0       	rjmp	.+78     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 226:	00 93 0e 01 	sts	0x010E, r16	; 0x80010e <__flp>
 22a:	10 93 0f 01 	sts	0x010F, r17	; 0x80010f <__flp+0x1>
 22e:	22 c0       	rjmp	.+68     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 230:	21 15       	cp	r18, r1
 232:	31 05       	cpc	r19, r1
 234:	19 f0       	breq	.+6      	; 0x23c <__EEPROM_REGION_LENGTH__+0x3c>
 236:	42 17       	cp	r20, r18
 238:	53 07       	cpc	r21, r19
 23a:	18 f4       	brcc	.+6      	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 23c:	9a 01       	movw	r18, r20
 23e:	bd 01       	movw	r22, r26
 240:	ef 01       	movw	r28, r30
 242:	df 01       	movw	r26, r30
 244:	f8 01       	movw	r30, r16
 246:	db cf       	rjmp	.-74     	; 0x1fe <malloc+0x22>
 248:	21 15       	cp	r18, r1
 24a:	31 05       	cpc	r19, r1
 24c:	f9 f0       	breq	.+62     	; 0x28c <__EEPROM_REGION_LENGTH__+0x8c>
 24e:	28 1b       	sub	r18, r24
 250:	39 0b       	sbc	r19, r25
 252:	24 30       	cpi	r18, 0x04	; 4
 254:	31 05       	cpc	r19, r1
 256:	80 f4       	brcc	.+32     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
 258:	8a 81       	ldd	r24, Y+2	; 0x02
 25a:	9b 81       	ldd	r25, Y+3	; 0x03
 25c:	61 15       	cp	r22, r1
 25e:	71 05       	cpc	r23, r1
 260:	21 f0       	breq	.+8      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
 262:	fb 01       	movw	r30, r22
 264:	93 83       	std	Z+3, r25	; 0x03
 266:	82 83       	std	Z+2, r24	; 0x02
 268:	04 c0       	rjmp	.+8      	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
 26a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__flp+0x1>
 26e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__flp>
 272:	fe 01       	movw	r30, r28
 274:	32 96       	adiw	r30, 0x02	; 2
 276:	44 c0       	rjmp	.+136    	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
 278:	fe 01       	movw	r30, r28
 27a:	e2 0f       	add	r30, r18
 27c:	f3 1f       	adc	r31, r19
 27e:	81 93       	st	Z+, r24
 280:	91 93       	st	Z+, r25
 282:	22 50       	subi	r18, 0x02	; 2
 284:	31 09       	sbc	r19, r1
 286:	39 83       	std	Y+1, r19	; 0x01
 288:	28 83       	st	Y, r18
 28a:	3a c0       	rjmp	.+116    	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
 28c:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 290:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 294:	23 2b       	or	r18, r19
 296:	41 f4       	brne	.+16     	; 0x2a8 <__EEPROM_REGION_LENGTH__+0xa8>
 298:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 29c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 2a0:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <__brkval+0x1>
 2a4:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <__brkval>
 2a8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2ac:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2b0:	21 15       	cp	r18, r1
 2b2:	31 05       	cpc	r19, r1
 2b4:	41 f4       	brne	.+16     	; 0x2c6 <__EEPROM_REGION_LENGTH__+0xc6>
 2b6:	2d b7       	in	r18, 0x3d	; 61
 2b8:	3e b7       	in	r19, 0x3e	; 62
 2ba:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 2be:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 2c2:	24 1b       	sub	r18, r20
 2c4:	35 0b       	sbc	r19, r21
 2c6:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__brkval>
 2ca:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__brkval+0x1>
 2ce:	e2 17       	cp	r30, r18
 2d0:	f3 07       	cpc	r31, r19
 2d2:	a0 f4       	brcc	.+40     	; 0x2fc <__EEPROM_REGION_LENGTH__+0xfc>
 2d4:	2e 1b       	sub	r18, r30
 2d6:	3f 0b       	sbc	r19, r31
 2d8:	28 17       	cp	r18, r24
 2da:	39 07       	cpc	r19, r25
 2dc:	78 f0       	brcs	.+30     	; 0x2fc <__EEPROM_REGION_LENGTH__+0xfc>
 2de:	ac 01       	movw	r20, r24
 2e0:	4e 5f       	subi	r20, 0xFE	; 254
 2e2:	5f 4f       	sbci	r21, 0xFF	; 255
 2e4:	24 17       	cp	r18, r20
 2e6:	35 07       	cpc	r19, r21
 2e8:	48 f0       	brcs	.+18     	; 0x2fc <__EEPROM_REGION_LENGTH__+0xfc>
 2ea:	4e 0f       	add	r20, r30
 2ec:	5f 1f       	adc	r21, r31
 2ee:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <__brkval+0x1>
 2f2:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <__brkval>
 2f6:	81 93       	st	Z+, r24
 2f8:	91 93       	st	Z+, r25
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <__EEPROM_REGION_LENGTH__+0x100>
 2fc:	e0 e0       	ldi	r30, 0x00	; 0
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	cf 01       	movw	r24, r30
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	1f 91       	pop	r17
 308:	0f 91       	pop	r16
 30a:	08 95       	ret

0000030c <free>:
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	00 97       	sbiw	r24, 0x00	; 0
 312:	09 f4       	brne	.+2      	; 0x316 <free+0xa>
 314:	81 c0       	rjmp	.+258    	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 316:	fc 01       	movw	r30, r24
 318:	32 97       	sbiw	r30, 0x02	; 2
 31a:	13 82       	std	Z+3, r1	; 0x03
 31c:	12 82       	std	Z+2, r1	; 0x02
 31e:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <__flp>
 322:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <__flp+0x1>
 326:	10 97       	sbiw	r26, 0x00	; 0
 328:	81 f4       	brne	.+32     	; 0x34a <free+0x3e>
 32a:	20 81       	ld	r18, Z
 32c:	31 81       	ldd	r19, Z+1	; 0x01
 32e:	82 0f       	add	r24, r18
 330:	93 1f       	adc	r25, r19
 332:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 336:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 33a:	28 17       	cp	r18, r24
 33c:	39 07       	cpc	r19, r25
 33e:	51 f5       	brne	.+84     	; 0x394 <free+0x88>
 340:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__brkval+0x1>
 344:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__brkval>
 348:	67 c0       	rjmp	.+206    	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 34a:	ed 01       	movw	r28, r26
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	ce 17       	cp	r28, r30
 352:	df 07       	cpc	r29, r31
 354:	40 f4       	brcc	.+16     	; 0x366 <free+0x5a>
 356:	4a 81       	ldd	r20, Y+2	; 0x02
 358:	5b 81       	ldd	r21, Y+3	; 0x03
 35a:	9e 01       	movw	r18, r28
 35c:	41 15       	cp	r20, r1
 35e:	51 05       	cpc	r21, r1
 360:	f1 f0       	breq	.+60     	; 0x39e <free+0x92>
 362:	ea 01       	movw	r28, r20
 364:	f5 cf       	rjmp	.-22     	; 0x350 <free+0x44>
 366:	d3 83       	std	Z+3, r29	; 0x03
 368:	c2 83       	std	Z+2, r28	; 0x02
 36a:	40 81       	ld	r20, Z
 36c:	51 81       	ldd	r21, Z+1	; 0x01
 36e:	84 0f       	add	r24, r20
 370:	95 1f       	adc	r25, r21
 372:	c8 17       	cp	r28, r24
 374:	d9 07       	cpc	r29, r25
 376:	59 f4       	brne	.+22     	; 0x38e <free+0x82>
 378:	88 81       	ld	r24, Y
 37a:	99 81       	ldd	r25, Y+1	; 0x01
 37c:	84 0f       	add	r24, r20
 37e:	95 1f       	adc	r25, r21
 380:	02 96       	adiw	r24, 0x02	; 2
 382:	91 83       	std	Z+1, r25	; 0x01
 384:	80 83       	st	Z, r24
 386:	8a 81       	ldd	r24, Y+2	; 0x02
 388:	9b 81       	ldd	r25, Y+3	; 0x03
 38a:	93 83       	std	Z+3, r25	; 0x03
 38c:	82 83       	std	Z+2, r24	; 0x02
 38e:	21 15       	cp	r18, r1
 390:	31 05       	cpc	r19, r1
 392:	29 f4       	brne	.+10     	; 0x39e <free+0x92>
 394:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__flp+0x1>
 398:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__flp>
 39c:	3d c0       	rjmp	.+122    	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 39e:	e9 01       	movw	r28, r18
 3a0:	fb 83       	std	Y+3, r31	; 0x03
 3a2:	ea 83       	std	Y+2, r30	; 0x02
 3a4:	49 91       	ld	r20, Y+
 3a6:	59 91       	ld	r21, Y+
 3a8:	c4 0f       	add	r28, r20
 3aa:	d5 1f       	adc	r29, r21
 3ac:	ec 17       	cp	r30, r28
 3ae:	fd 07       	cpc	r31, r29
 3b0:	61 f4       	brne	.+24     	; 0x3ca <free+0xbe>
 3b2:	80 81       	ld	r24, Z
 3b4:	91 81       	ldd	r25, Z+1	; 0x01
 3b6:	84 0f       	add	r24, r20
 3b8:	95 1f       	adc	r25, r21
 3ba:	02 96       	adiw	r24, 0x02	; 2
 3bc:	e9 01       	movw	r28, r18
 3be:	99 83       	std	Y+1, r25	; 0x01
 3c0:	88 83       	st	Y, r24
 3c2:	82 81       	ldd	r24, Z+2	; 0x02
 3c4:	93 81       	ldd	r25, Z+3	; 0x03
 3c6:	9b 83       	std	Y+3, r25	; 0x03
 3c8:	8a 83       	std	Y+2, r24	; 0x02
 3ca:	e0 e0       	ldi	r30, 0x00	; 0
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	12 96       	adiw	r26, 0x02	; 2
 3d0:	8d 91       	ld	r24, X+
 3d2:	9c 91       	ld	r25, X
 3d4:	13 97       	sbiw	r26, 0x03	; 3
 3d6:	00 97       	sbiw	r24, 0x00	; 0
 3d8:	19 f0       	breq	.+6      	; 0x3e0 <free+0xd4>
 3da:	fd 01       	movw	r30, r26
 3dc:	dc 01       	movw	r26, r24
 3de:	f7 cf       	rjmp	.-18     	; 0x3ce <free+0xc2>
 3e0:	8d 91       	ld	r24, X+
 3e2:	9c 91       	ld	r25, X
 3e4:	11 97       	sbiw	r26, 0x01	; 1
 3e6:	9d 01       	movw	r18, r26
 3e8:	2e 5f       	subi	r18, 0xFE	; 254
 3ea:	3f 4f       	sbci	r19, 0xFF	; 255
 3ec:	82 0f       	add	r24, r18
 3ee:	93 1f       	adc	r25, r19
 3f0:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__brkval>
 3f4:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__brkval+0x1>
 3f8:	28 17       	cp	r18, r24
 3fa:	39 07       	cpc	r19, r25
 3fc:	69 f4       	brne	.+26     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 3fe:	30 97       	sbiw	r30, 0x00	; 0
 400:	29 f4       	brne	.+10     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 402:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp+0x1>
 406:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__flp>
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 40c:	13 82       	std	Z+3, r1	; 0x03
 40e:	12 82       	std	Z+2, r1	; 0x02
 410:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__brkval+0x1>
 414:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__brkval>
 418:	df 91       	pop	r29
 41a:	cf 91       	pop	r28
 41c:	08 95       	ret

0000041e <memset>:
 41e:	dc 01       	movw	r26, r24
 420:	01 c0       	rjmp	.+2      	; 0x424 <memset+0x6>
 422:	6d 93       	st	X+, r22
 424:	41 50       	subi	r20, 0x01	; 1
 426:	50 40       	sbci	r21, 0x00	; 0
 428:	e0 f7       	brcc	.-8      	; 0x422 <memset+0x4>
 42a:	08 95       	ret

0000042c <fputc>:
 42c:	0f 93       	push	r16
 42e:	1f 93       	push	r17
 430:	cf 93       	push	r28
 432:	df 93       	push	r29
 434:	fb 01       	movw	r30, r22
 436:	23 81       	ldd	r18, Z+3	; 0x03
 438:	21 fd       	sbrc	r18, 1
 43a:	03 c0       	rjmp	.+6      	; 0x442 <fputc+0x16>
 43c:	8f ef       	ldi	r24, 0xFF	; 255
 43e:	9f ef       	ldi	r25, 0xFF	; 255
 440:	2c c0       	rjmp	.+88     	; 0x49a <fputc+0x6e>
 442:	22 ff       	sbrs	r18, 2
 444:	16 c0       	rjmp	.+44     	; 0x472 <fputc+0x46>
 446:	46 81       	ldd	r20, Z+6	; 0x06
 448:	57 81       	ldd	r21, Z+7	; 0x07
 44a:	24 81       	ldd	r18, Z+4	; 0x04
 44c:	35 81       	ldd	r19, Z+5	; 0x05
 44e:	42 17       	cp	r20, r18
 450:	53 07       	cpc	r21, r19
 452:	44 f4       	brge	.+16     	; 0x464 <fputc+0x38>
 454:	a0 81       	ld	r26, Z
 456:	b1 81       	ldd	r27, Z+1	; 0x01
 458:	9d 01       	movw	r18, r26
 45a:	2f 5f       	subi	r18, 0xFF	; 255
 45c:	3f 4f       	sbci	r19, 0xFF	; 255
 45e:	31 83       	std	Z+1, r19	; 0x01
 460:	20 83       	st	Z, r18
 462:	8c 93       	st	X, r24
 464:	26 81       	ldd	r18, Z+6	; 0x06
 466:	37 81       	ldd	r19, Z+7	; 0x07
 468:	2f 5f       	subi	r18, 0xFF	; 255
 46a:	3f 4f       	sbci	r19, 0xFF	; 255
 46c:	37 83       	std	Z+7, r19	; 0x07
 46e:	26 83       	std	Z+6, r18	; 0x06
 470:	14 c0       	rjmp	.+40     	; 0x49a <fputc+0x6e>
 472:	8b 01       	movw	r16, r22
 474:	ec 01       	movw	r28, r24
 476:	fb 01       	movw	r30, r22
 478:	00 84       	ldd	r0, Z+8	; 0x08
 47a:	f1 85       	ldd	r31, Z+9	; 0x09
 47c:	e0 2d       	mov	r30, r0
 47e:	09 95       	icall
 480:	89 2b       	or	r24, r25
 482:	e1 f6       	brne	.-72     	; 0x43c <fputc+0x10>
 484:	d8 01       	movw	r26, r16
 486:	16 96       	adiw	r26, 0x06	; 6
 488:	8d 91       	ld	r24, X+
 48a:	9c 91       	ld	r25, X
 48c:	17 97       	sbiw	r26, 0x07	; 7
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	17 96       	adiw	r26, 0x07	; 7
 492:	9c 93       	st	X, r25
 494:	8e 93       	st	-X, r24
 496:	16 97       	sbiw	r26, 0x06	; 6
 498:	ce 01       	movw	r24, r28
 49a:	df 91       	pop	r29
 49c:	cf 91       	pop	r28
 49e:	1f 91       	pop	r17
 4a0:	0f 91       	pop	r16
 4a2:	08 95       	ret

000004a4 <_exit>:
 4a4:	f8 94       	cli

000004a6 <__stop_program>:
 4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <__stop_program>
