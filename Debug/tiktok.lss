
tiktok.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fe  00800100  00000cd2  00000d66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001fe  008001fe  00000e64  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e64  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ec0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009ab  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bf  00000000  00000000  000018ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000036a  00000000  00000000  000020ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00002418  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fe  00000000  00000000  00002500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000242  00000000  00000000  000028fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002b40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ed       	ldi	r30, 0xD2	; 210
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 3f       	cpi	r26, 0xFE	; 254
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ae ef       	ldi	r26, 0xFE	; 254
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 30       	cpi	r26, 0x08	; 8
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <main>
  a6:	0c 94 67 06 	jmp	0xcce	; 0xcce <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <uart_receive>:
	return 0;
}
*/

int uart_receive(){
	if(!(UCSR0A & (1<<RXC0))){
  ae:	5f 9b       	sbis	0x0b, 7	; 11
  b0:	03 c0       	rjmp	.+6      	; 0xb8 <uart_receive+0xa>
		return 0;
	}
	return UDR0;
  b2:	8c b1       	in	r24, 0x0c	; 12
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret
}
*/

int uart_receive(){
	if(!(UCSR0A & (1<<RXC0))){
		return 0;
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	90 e0       	ldi	r25, 0x00	; 0
	}
	return UDR0;
}
  bc:	08 95       	ret

000000be <usart_putchar>:
    return 0;
}

void usart_putchar(char data) {
    // Wait for empty transmit buffer
    while(!(UCSR0A & (1<<UDRE0))){
  be:	5d 9b       	sbis	0x0b, 5	; 11
  c0:	fe cf       	rjmp	.-4      	; 0xbe <usart_putchar>
			//While the flag is off
		}
		//send message
		UDR0 = data;
  c2:	8c b9       	out	0x0c, r24	; 12
  c4:	08 95       	ret

000000c6 <usart_putchar_printf>:
#include "Uart_driver.h"
#include <avr/io.h>
#include <avr/sleep.h>

// this function is called by printf as a stream handler
int usart_putchar_printf(char var, FILE *stream) {
  c6:	cf 93       	push	r28
  c8:	c8 2f       	mov	r28, r24
    // translate \n to \r for br@y++ terminal
    if (var == '\n') usart_putchar('\r');
  ca:	8a 30       	cpi	r24, 0x0A	; 10
  cc:	21 f4       	brne	.+8      	; 0xd6 <usart_putchar_printf+0x10>
  ce:	8d e0       	ldi	r24, 0x0D	; 13
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 5f 00 	call	0xbe	; 0xbe <usart_putchar>
    usart_putchar(var);
  d6:	8c 2f       	mov	r24, r28
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 5f 00 	call	0xbe	; 0xbe <usart_putchar>
    return 0;
}
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	cf 91       	pop	r28
  e4:	08 95       	ret

000000e6 <SRAM_test>:
}

static FILE mystdout = FDEV_SETUP_STREAM(usart_putchar_printf, NULL, _FDEV_SETUP_WRITE);

void SRAM_test(void)
{
  e6:	ef 92       	push	r14
  e8:	ff 92       	push	r15
  ea:	0f 93       	push	r16
  ec:	1f 93       	push	r17
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
    uint16_t ext_ram_size = 0x800;
    uint16_t write_errors = 0;
    uint16_t retrieval_errors = 0;
    printf("Starting SRAM test...\n");
  f2:	88 e1       	ldi	r24, 0x18	; 24
  f4:	91 e0       	ldi	r25, 0x01	; 1
  f6:	0e 94 c8 01 	call	0x390	; 0x390 <puts>
    // rand() stores some internal state, so calling this function in a loop will
    // yield different seeds each time (unless srand() is called before this function)
    uint16_t seed = rand();
  fa:	0e 94 57 01 	call	0x2ae	; 0x2ae <rand>
  fe:	7c 01       	movw	r14, r24
    // Write phase: Immediately check that the correct value was stored
    srand(seed);
 100:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <srand>
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 104:	c0 e0       	ldi	r28, 0x00	; 0
 106:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
    uint16_t ext_ram_size = 0x800;
    uint16_t write_errors = 0;
 108:	00 e0       	ldi	r16, 0x00	; 0
 10a:	10 e0       	ldi	r17, 0x00	; 0
    // rand() stores some internal state, so calling this function in a loop will
    // yield different seeds each time (unless srand() is called before this function)
    uint16_t seed = rand();
    // Write phase: Immediately check that the correct value was stored
    srand(seed);
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 10c:	20 c0       	rjmp	.+64     	; 0x14e <SRAM_test+0x68>
        uint8_t some_value = rand();
 10e:	0e 94 57 01 	call	0x2ae	; 0x2ae <rand>
        ext_ram[i] = some_value;
 112:	fe 01       	movw	r30, r28
 114:	f8 5e       	subi	r31, 0xE8	; 232
 116:	80 83       	st	Z, r24
        uint8_t retreived_value = ext_ram[i];
 118:	20 81       	ld	r18, Z
        if (retreived_value != some_value) {
 11a:	28 17       	cp	r18, r24
 11c:	b9 f0       	breq	.+46     	; 0x14c <SRAM_test+0x66>
            printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 11e:	99 27       	eor	r25, r25
 120:	9f 93       	push	r25
 122:	8f 93       	push	r24
 124:	1f 92       	push	r1
 126:	2f 93       	push	r18
 128:	df 93       	push	r29
 12a:	cf 93       	push	r28
 12c:	8e e2       	ldi	r24, 0x2E	; 46
 12e:	91 e0       	ldi	r25, 0x01	; 1
 130:	9f 93       	push	r25
 132:	8f 93       	push	r24
 134:	0e 94 b2 01 	call	0x364	; 0x364 <printf>
            write_errors++;
 138:	0f 5f       	subi	r16, 0xFF	; 255
 13a:	1f 4f       	sbci	r17, 0xFF	; 255
 13c:	8d b7       	in	r24, 0x3d	; 61
 13e:	9e b7       	in	r25, 0x3e	; 62
 140:	08 96       	adiw	r24, 0x08	; 8
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	9e bf       	out	0x3e, r25	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	8d bf       	out	0x3d, r24	; 61
    // rand() stores some internal state, so calling this function in a loop will
    // yield different seeds each time (unless srand() is called before this function)
    uint16_t seed = rand();
    // Write phase: Immediately check that the correct value was stored
    srand(seed);
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 14c:	21 96       	adiw	r28, 0x01	; 1
 14e:	c1 15       	cp	r28, r1
 150:	98 e0       	ldi	r25, 0x08	; 8
 152:	d9 07       	cpc	r29, r25
 154:	e0 f2       	brcs	.-72     	; 0x10e <SRAM_test+0x28>
            printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
            write_errors++;
        }
    }
    // Retrieval phase: Check that no values were changed during or after the write phase
    srand(seed);
 156:	c7 01       	movw	r24, r14
 158:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <srand>
    // reset the PRNG to the state it had before the write phase
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 15c:	c0 e0       	ldi	r28, 0x00	; 0
 15e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
    uint16_t ext_ram_size = 0x800;
    uint16_t write_errors = 0;
    uint16_t retrieval_errors = 0;
 160:	e1 2c       	mov	r14, r1
 162:	f1 2c       	mov	r15, r1
        }
    }
    // Retrieval phase: Check that no values were changed during or after the write phase
    srand(seed);
    // reset the PRNG to the state it had before the write phase
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 164:	20 c0       	rjmp	.+64     	; 0x1a6 <SRAM_test+0xc0>
        uint8_t some_value = rand();
 166:	0e 94 57 01 	call	0x2ae	; 0x2ae <rand>
        uint8_t retreived_value = ext_ram[i];
 16a:	fe 01       	movw	r30, r28
 16c:	f8 5e       	subi	r31, 0xE8	; 232
 16e:	20 81       	ld	r18, Z
        if (retreived_value != some_value) {
 170:	28 17       	cp	r18, r24
 172:	c1 f0       	breq	.+48     	; 0x1a4 <SRAM_test+0xbe>
            printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 174:	99 27       	eor	r25, r25
 176:	9f 93       	push	r25
 178:	8f 93       	push	r24
 17a:	1f 92       	push	r1
 17c:	2f 93       	push	r18
 17e:	df 93       	push	r29
 180:	cf 93       	push	r28
 182:	87 e6       	ldi	r24, 0x67	; 103
 184:	91 e0       	ldi	r25, 0x01	; 1
 186:	9f 93       	push	r25
 188:	8f 93       	push	r24
 18a:	0e 94 b2 01 	call	0x364	; 0x364 <printf>
            retrieval_errors++;
 18e:	8f ef       	ldi	r24, 0xFF	; 255
 190:	e8 1a       	sub	r14, r24
 192:	f8 0a       	sbc	r15, r24
 194:	8d b7       	in	r24, 0x3d	; 61
 196:	9e b7       	in	r25, 0x3e	; 62
 198:	08 96       	adiw	r24, 0x08	; 8
 19a:	0f b6       	in	r0, 0x3f	; 63
 19c:	f8 94       	cli
 19e:	9e bf       	out	0x3e, r25	; 62
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	8d bf       	out	0x3d, r24	; 61
        }
    }
    // Retrieval phase: Check that no values were changed during or after the write phase
    srand(seed);
    // reset the PRNG to the state it had before the write phase
    for (uint16_t i = 0; i < ext_ram_size; i++) {
 1a4:	21 96       	adiw	r28, 0x01	; 1
 1a6:	c1 15       	cp	r28, r1
 1a8:	98 e0       	ldi	r25, 0x08	; 8
 1aa:	d9 07       	cpc	r29, r25
 1ac:	e0 f2       	brcs	.-72     	; 0x166 <SRAM_test+0x80>
        if (retreived_value != some_value) {
            printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
            retrieval_errors++;
        }
    }
    printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1ae:	ff 92       	push	r15
 1b0:	ef 92       	push	r14
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	84 ea       	ldi	r24, 0xA4	; 164
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	9f 93       	push	r25
 1bc:	8f 93       	push	r24
 1be:	0e 94 b2 01 	call	0x364	; 0x364 <printf>
}
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	ff 90       	pop	r15
 1d8:	ef 90       	pop	r14
 1da:	08 95       	ret

000001dc <uart_init>:

void uart_init(unsigned int baud){
	int bd = 31;
	//set baud rate
	UBRR0H = (bd>>8);
 1dc:	10 bc       	out	0x20, r1	; 32
	UBRR0L = bd;
 1de:	8f e1       	ldi	r24, 0x1F	; 31
 1e0:	89 b9       	out	0x09, r24	; 9
	//Enable r/t
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 1e2:	88 e1       	ldi	r24, 0x18	; 24
 1e4:	8a b9       	out	0x0a, r24	; 10
	//set frame format
	UCSR0C = (1<<USBS0) | (1<<URSEL0) | (3<<UCSZ00);
 1e6:	8e e8       	ldi	r24, 0x8E	; 142
 1e8:	80 bd       	out	0x20, r24	; 32
	fdevopen(usart_putchar_printf,uart_receive);
 1ea:	67 e5       	ldi	r22, 0x57	; 87
 1ec:	70 e0       	ldi	r23, 0x00	; 0
 1ee:	83 e6       	ldi	r24, 0x63	; 99
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0e 94 67 01 	call	0x2ce	; 0x2ce <fdevopen>
 1f6:	08 95       	ret

000001f8 <main>:
	}
	return UDR0;
}

int main(){
	uart_init(9600);
 1f8:	80 e8       	ldi	r24, 0x80	; 128
 1fa:	95 e2       	ldi	r25, 0x25	; 37
 1fc:	0e 94 ee 00 	call	0x1dc	; 0x1dc <uart_init>
	stdout = &mystdout;
 200:	8a e0       	ldi	r24, 0x0A	; 10
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_end+0x3>
 208:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_end+0x2>
	SRAM_test();
 20c:	0e 94 73 00 	call	0xe6	; 0xe6 <SRAM_test>
		PORTB |= (1 << PB0);
		_delay_ms(10);
		PORTB &= ~(1 << PB0);
		_delay_ms(10);
	}*/
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	08 95       	ret

00000216 <do_rand>:
 216:	8f 92       	push	r8
 218:	9f 92       	push	r9
 21a:	af 92       	push	r10
 21c:	bf 92       	push	r11
 21e:	cf 92       	push	r12
 220:	df 92       	push	r13
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	ec 01       	movw	r28, r24
 22c:	68 81       	ld	r22, Y
 22e:	79 81       	ldd	r23, Y+1	; 0x01
 230:	8a 81       	ldd	r24, Y+2	; 0x02
 232:	9b 81       	ldd	r25, Y+3	; 0x03
 234:	61 15       	cp	r22, r1
 236:	71 05       	cpc	r23, r1
 238:	81 05       	cpc	r24, r1
 23a:	91 05       	cpc	r25, r1
 23c:	21 f4       	brne	.+8      	; 0x246 <do_rand+0x30>
 23e:	64 e2       	ldi	r22, 0x24	; 36
 240:	79 ed       	ldi	r23, 0xD9	; 217
 242:	8b e5       	ldi	r24, 0x5B	; 91
 244:	97 e0       	ldi	r25, 0x07	; 7
 246:	2d e1       	ldi	r18, 0x1D	; 29
 248:	33 ef       	ldi	r19, 0xF3	; 243
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__divmodsi4>
 252:	49 01       	movw	r8, r18
 254:	5a 01       	movw	r10, r20
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
 25a:	a7 ea       	ldi	r26, 0xA7	; 167
 25c:	b1 e4       	ldi	r27, 0x41	; 65
 25e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__muluhisi3>
 262:	6b 01       	movw	r12, r22
 264:	7c 01       	movw	r14, r24
 266:	ac ee       	ldi	r26, 0xEC	; 236
 268:	b4 ef       	ldi	r27, 0xF4	; 244
 26a:	a5 01       	movw	r20, r10
 26c:	94 01       	movw	r18, r8
 26e:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__mulohisi3>
 272:	dc 01       	movw	r26, r24
 274:	cb 01       	movw	r24, r22
 276:	8c 0d       	add	r24, r12
 278:	9d 1d       	adc	r25, r13
 27a:	ae 1d       	adc	r26, r14
 27c:	bf 1d       	adc	r27, r15
 27e:	b7 ff       	sbrs	r27, 7
 280:	03 c0       	rjmp	.+6      	; 0x288 <do_rand+0x72>
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	a1 09       	sbc	r26, r1
 286:	b0 48       	sbci	r27, 0x80	; 128
 288:	88 83       	st	Y, r24
 28a:	99 83       	std	Y+1, r25	; 0x01
 28c:	aa 83       	std	Y+2, r26	; 0x02
 28e:	bb 83       	std	Y+3, r27	; 0x03
 290:	9f 77       	andi	r25, 0x7F	; 127
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	ff 90       	pop	r15
 298:	ef 90       	pop	r14
 29a:	df 90       	pop	r13
 29c:	cf 90       	pop	r12
 29e:	bf 90       	pop	r11
 2a0:	af 90       	pop	r10
 2a2:	9f 90       	pop	r9
 2a4:	8f 90       	pop	r8
 2a6:	08 95       	ret

000002a8 <rand_r>:
 2a8:	0e 94 0b 01 	call	0x216	; 0x216 <do_rand>
 2ac:	08 95       	ret

000002ae <rand>:
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	0e 94 0b 01 	call	0x216	; 0x216 <do_rand>
 2b6:	08 95       	ret

000002b8 <srand>:
 2b8:	a0 e0       	ldi	r26, 0x00	; 0
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2c0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2c4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2c8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2cc:	08 95       	ret

000002ce <fdevopen>:
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	31 f4       	brne	.+12     	; 0x2e6 <fdevopen+0x18>
 2da:	61 15       	cp	r22, r1
 2dc:	71 05       	cpc	r23, r1
 2de:	19 f4       	brne	.+6      	; 0x2e6 <fdevopen+0x18>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	3a c0       	rjmp	.+116    	; 0x35a <fdevopen+0x8c>
 2e6:	8b 01       	movw	r16, r22
 2e8:	ec 01       	movw	r28, r24
 2ea:	6e e0       	ldi	r22, 0x0E	; 14
 2ec:	70 e0       	ldi	r23, 0x00	; 0
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <calloc>
 2f6:	fc 01       	movw	r30, r24
 2f8:	89 2b       	or	r24, r25
 2fa:	91 f3       	breq	.-28     	; 0x2e0 <fdevopen+0x12>
 2fc:	80 e8       	ldi	r24, 0x80	; 128
 2fe:	83 83       	std	Z+3, r24	; 0x03
 300:	01 15       	cp	r16, r1
 302:	11 05       	cpc	r17, r1
 304:	71 f0       	breq	.+28     	; 0x322 <fdevopen+0x54>
 306:	13 87       	std	Z+11, r17	; 0x0b
 308:	02 87       	std	Z+10, r16	; 0x0a
 30a:	81 e8       	ldi	r24, 0x81	; 129
 30c:	83 83       	std	Z+3, r24	; 0x03
 30e:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <__data_end>
 312:	90 91 ff 01 	lds	r25, 0x01FF	; 0x8001ff <__data_end+0x1>
 316:	89 2b       	or	r24, r25
 318:	21 f4       	brne	.+8      	; 0x322 <fdevopen+0x54>
 31a:	f0 93 ff 01 	sts	0x01FF, r31	; 0x8001ff <__data_end+0x1>
 31e:	e0 93 fe 01 	sts	0x01FE, r30	; 0x8001fe <__data_end>
 322:	20 97       	sbiw	r28, 0x00	; 0
 324:	c9 f0       	breq	.+50     	; 0x358 <fdevopen+0x8a>
 326:	d1 87       	std	Z+9, r29	; 0x09
 328:	c0 87       	std	Z+8, r28	; 0x08
 32a:	83 81       	ldd	r24, Z+3	; 0x03
 32c:	82 60       	ori	r24, 0x02	; 2
 32e:	83 83       	std	Z+3, r24	; 0x03
 330:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end+0x2>
 334:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_end+0x3>
 338:	89 2b       	or	r24, r25
 33a:	71 f4       	brne	.+28     	; 0x358 <fdevopen+0x8a>
 33c:	f0 93 01 02 	sts	0x0201, r31	; 0x800201 <__data_end+0x3>
 340:	e0 93 00 02 	sts	0x0200, r30	; 0x800200 <__data_end+0x2>
 344:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end+0x4>
 348:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_end+0x5>
 34c:	89 2b       	or	r24, r25
 34e:	21 f4       	brne	.+8      	; 0x358 <fdevopen+0x8a>
 350:	f0 93 03 02 	sts	0x0203, r31	; 0x800203 <__data_end+0x5>
 354:	e0 93 02 02 	sts	0x0202, r30	; 0x800202 <__data_end+0x4>
 358:	cf 01       	movw	r24, r30
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	1f 91       	pop	r17
 360:	0f 91       	pop	r16
 362:	08 95       	ret

00000364 <printf>:
 364:	a0 e0       	ldi	r26, 0x00	; 0
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e8 eb       	ldi	r30, 0xB8	; 184
 36a:	f1 e0       	ldi	r31, 0x01	; 1
 36c:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__prologue_saves__+0x20>
 370:	ae 01       	movw	r20, r28
 372:	4b 5f       	subi	r20, 0xFB	; 251
 374:	5f 4f       	sbci	r21, 0xFF	; 255
 376:	fa 01       	movw	r30, r20
 378:	61 91       	ld	r22, Z+
 37a:	71 91       	ld	r23, Z+
 37c:	af 01       	movw	r20, r30
 37e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end+0x2>
 382:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_end+0x3>
 386:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <vfprintf>
 38a:	e2 e0       	ldi	r30, 0x02	; 2
 38c:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__epilogue_restores__+0x20>

00000390 <puts>:
 390:	0f 93       	push	r16
 392:	1f 93       	push	r17
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__data_end+0x2>
 39c:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__data_end+0x3>
 3a0:	23 81       	ldd	r18, Z+3	; 0x03
 3a2:	21 ff       	sbrs	r18, 1
 3a4:	1b c0       	rjmp	.+54     	; 0x3dc <puts+0x4c>
 3a6:	8c 01       	movw	r16, r24
 3a8:	d0 e0       	ldi	r29, 0x00	; 0
 3aa:	c0 e0       	ldi	r28, 0x00	; 0
 3ac:	f8 01       	movw	r30, r16
 3ae:	81 91       	ld	r24, Z+
 3b0:	8f 01       	movw	r16, r30
 3b2:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_end+0x2>
 3b6:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_end+0x3>
 3ba:	db 01       	movw	r26, r22
 3bc:	18 96       	adiw	r26, 0x08	; 8
 3be:	ed 91       	ld	r30, X+
 3c0:	fc 91       	ld	r31, X
 3c2:	19 97       	sbiw	r26, 0x09	; 9
 3c4:	88 23       	and	r24, r24
 3c6:	31 f0       	breq	.+12     	; 0x3d4 <puts+0x44>
 3c8:	09 95       	icall
 3ca:	89 2b       	or	r24, r25
 3cc:	79 f3       	breq	.-34     	; 0x3ac <puts+0x1c>
 3ce:	df ef       	ldi	r29, 0xFF	; 255
 3d0:	cf ef       	ldi	r28, 0xFF	; 255
 3d2:	ec cf       	rjmp	.-40     	; 0x3ac <puts+0x1c>
 3d4:	8a e0       	ldi	r24, 0x0A	; 10
 3d6:	09 95       	icall
 3d8:	89 2b       	or	r24, r25
 3da:	19 f0       	breq	.+6      	; 0x3e2 <puts+0x52>
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	9f ef       	ldi	r25, 0xFF	; 255
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <puts+0x56>
 3e2:	8d 2f       	mov	r24, r29
 3e4:	9c 2f       	mov	r25, r28
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <vfprintf>:
 3f0:	ab e0       	ldi	r26, 0x0B	; 11
 3f2:	b0 e0       	ldi	r27, 0x00	; 0
 3f4:	ee ef       	ldi	r30, 0xFE	; 254
 3f6:	f1 e0       	ldi	r31, 0x01	; 1
 3f8:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__prologue_saves__>
 3fc:	6c 01       	movw	r12, r24
 3fe:	7b 01       	movw	r14, r22
 400:	8a 01       	movw	r16, r20
 402:	fc 01       	movw	r30, r24
 404:	17 82       	std	Z+7, r1	; 0x07
 406:	16 82       	std	Z+6, r1	; 0x06
 408:	83 81       	ldd	r24, Z+3	; 0x03
 40a:	81 ff       	sbrs	r24, 1
 40c:	cc c1       	rjmp	.+920    	; 0x7a6 <__stack+0x2a7>
 40e:	ce 01       	movw	r24, r28
 410:	01 96       	adiw	r24, 0x01	; 1
 412:	3c 01       	movw	r6, r24
 414:	f6 01       	movw	r30, r12
 416:	93 81       	ldd	r25, Z+3	; 0x03
 418:	f7 01       	movw	r30, r14
 41a:	93 fd       	sbrc	r25, 3
 41c:	85 91       	lpm	r24, Z+
 41e:	93 ff       	sbrs	r25, 3
 420:	81 91       	ld	r24, Z+
 422:	7f 01       	movw	r14, r30
 424:	88 23       	and	r24, r24
 426:	09 f4       	brne	.+2      	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 428:	ba c1       	rjmp	.+884    	; 0x79e <__stack+0x29f>
 42a:	85 32       	cpi	r24, 0x25	; 37
 42c:	39 f4       	brne	.+14     	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 42e:	93 fd       	sbrc	r25, 3
 430:	85 91       	lpm	r24, Z+
 432:	93 ff       	sbrs	r25, 3
 434:	81 91       	ld	r24, Z+
 436:	7f 01       	movw	r14, r30
 438:	85 32       	cpi	r24, 0x25	; 37
 43a:	29 f4       	brne	.+10     	; 0x446 <__DATA_REGION_LENGTH__+0x46>
 43c:	b6 01       	movw	r22, r12
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 444:	e7 cf       	rjmp	.-50     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 446:	91 2c       	mov	r9, r1
 448:	21 2c       	mov	r2, r1
 44a:	31 2c       	mov	r3, r1
 44c:	ff e1       	ldi	r31, 0x1F	; 31
 44e:	f3 15       	cp	r31, r3
 450:	d8 f0       	brcs	.+54     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 452:	8b 32       	cpi	r24, 0x2B	; 43
 454:	79 f0       	breq	.+30     	; 0x474 <__DATA_REGION_LENGTH__+0x74>
 456:	38 f4       	brcc	.+14     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 458:	80 32       	cpi	r24, 0x20	; 32
 45a:	79 f0       	breq	.+30     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 45c:	83 32       	cpi	r24, 0x23	; 35
 45e:	a1 f4       	brne	.+40     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 460:	23 2d       	mov	r18, r3
 462:	20 61       	ori	r18, 0x10	; 16
 464:	1d c0       	rjmp	.+58     	; 0x4a0 <__DATA_REGION_LENGTH__+0xa0>
 466:	8d 32       	cpi	r24, 0x2D	; 45
 468:	61 f0       	breq	.+24     	; 0x482 <__DATA_REGION_LENGTH__+0x82>
 46a:	80 33       	cpi	r24, 0x30	; 48
 46c:	69 f4       	brne	.+26     	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 46e:	23 2d       	mov	r18, r3
 470:	21 60       	ori	r18, 0x01	; 1
 472:	16 c0       	rjmp	.+44     	; 0x4a0 <__DATA_REGION_LENGTH__+0xa0>
 474:	83 2d       	mov	r24, r3
 476:	82 60       	ori	r24, 0x02	; 2
 478:	38 2e       	mov	r3, r24
 47a:	e3 2d       	mov	r30, r3
 47c:	e4 60       	ori	r30, 0x04	; 4
 47e:	3e 2e       	mov	r3, r30
 480:	2a c0       	rjmp	.+84     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 482:	f3 2d       	mov	r31, r3
 484:	f8 60       	ori	r31, 0x08	; 8
 486:	1d c0       	rjmp	.+58     	; 0x4c2 <__DATA_REGION_LENGTH__+0xc2>
 488:	37 fc       	sbrc	r3, 7
 48a:	2d c0       	rjmp	.+90     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 48c:	20 ed       	ldi	r18, 0xD0	; 208
 48e:	28 0f       	add	r18, r24
 490:	2a 30       	cpi	r18, 0x0A	; 10
 492:	40 f0       	brcs	.+16     	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
 494:	8e 32       	cpi	r24, 0x2E	; 46
 496:	b9 f4       	brne	.+46     	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
 498:	36 fc       	sbrc	r3, 6
 49a:	81 c1       	rjmp	.+770    	; 0x79e <__stack+0x29f>
 49c:	23 2d       	mov	r18, r3
 49e:	20 64       	ori	r18, 0x40	; 64
 4a0:	32 2e       	mov	r3, r18
 4a2:	19 c0       	rjmp	.+50     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4a4:	36 fe       	sbrs	r3, 6
 4a6:	06 c0       	rjmp	.+12     	; 0x4b4 <__DATA_REGION_LENGTH__+0xb4>
 4a8:	8a e0       	ldi	r24, 0x0A	; 10
 4aa:	98 9e       	mul	r9, r24
 4ac:	20 0d       	add	r18, r0
 4ae:	11 24       	eor	r1, r1
 4b0:	92 2e       	mov	r9, r18
 4b2:	11 c0       	rjmp	.+34     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4b4:	ea e0       	ldi	r30, 0x0A	; 10
 4b6:	2e 9e       	mul	r2, r30
 4b8:	20 0d       	add	r18, r0
 4ba:	11 24       	eor	r1, r1
 4bc:	22 2e       	mov	r2, r18
 4be:	f3 2d       	mov	r31, r3
 4c0:	f0 62       	ori	r31, 0x20	; 32
 4c2:	3f 2e       	mov	r3, r31
 4c4:	08 c0       	rjmp	.+16     	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4c6:	8c 36       	cpi	r24, 0x6C	; 108
 4c8:	21 f4       	brne	.+8      	; 0x4d2 <__DATA_REGION_LENGTH__+0xd2>
 4ca:	83 2d       	mov	r24, r3
 4cc:	80 68       	ori	r24, 0x80	; 128
 4ce:	38 2e       	mov	r3, r24
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
 4d2:	88 36       	cpi	r24, 0x68	; 104
 4d4:	41 f4       	brne	.+16     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
 4d6:	f7 01       	movw	r30, r14
 4d8:	93 fd       	sbrc	r25, 3
 4da:	85 91       	lpm	r24, Z+
 4dc:	93 ff       	sbrs	r25, 3
 4de:	81 91       	ld	r24, Z+
 4e0:	7f 01       	movw	r14, r30
 4e2:	81 11       	cpse	r24, r1
 4e4:	b3 cf       	rjmp	.-154    	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 4e6:	98 2f       	mov	r25, r24
 4e8:	9f 7d       	andi	r25, 0xDF	; 223
 4ea:	95 54       	subi	r25, 0x45	; 69
 4ec:	93 30       	cpi	r25, 0x03	; 3
 4ee:	28 f4       	brcc	.+10     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4f0:	0c 5f       	subi	r16, 0xFC	; 252
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	9f e3       	ldi	r25, 0x3F	; 63
 4f6:	99 83       	std	Y+1, r25	; 0x01
 4f8:	0d c0       	rjmp	.+26     	; 0x514 <__stack+0x15>
 4fa:	83 36       	cpi	r24, 0x63	; 99
 4fc:	31 f0       	breq	.+12     	; 0x50a <__stack+0xb>
 4fe:	83 37       	cpi	r24, 0x73	; 115
 500:	71 f0       	breq	.+28     	; 0x51e <__stack+0x1f>
 502:	83 35       	cpi	r24, 0x53	; 83
 504:	09 f0       	breq	.+2      	; 0x508 <__stack+0x9>
 506:	59 c0       	rjmp	.+178    	; 0x5ba <__stack+0xbb>
 508:	21 c0       	rjmp	.+66     	; 0x54c <__stack+0x4d>
 50a:	f8 01       	movw	r30, r16
 50c:	80 81       	ld	r24, Z
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	0e 5f       	subi	r16, 0xFE	; 254
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	88 24       	eor	r8, r8
 516:	83 94       	inc	r8
 518:	91 2c       	mov	r9, r1
 51a:	53 01       	movw	r10, r6
 51c:	13 c0       	rjmp	.+38     	; 0x544 <__stack+0x45>
 51e:	28 01       	movw	r4, r16
 520:	f2 e0       	ldi	r31, 0x02	; 2
 522:	4f 0e       	add	r4, r31
 524:	51 1c       	adc	r5, r1
 526:	f8 01       	movw	r30, r16
 528:	a0 80       	ld	r10, Z
 52a:	b1 80       	ldd	r11, Z+1	; 0x01
 52c:	36 fe       	sbrs	r3, 6
 52e:	03 c0       	rjmp	.+6      	; 0x536 <__stack+0x37>
 530:	69 2d       	mov	r22, r9
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <__stack+0x3b>
 536:	6f ef       	ldi	r22, 0xFF	; 255
 538:	7f ef       	ldi	r23, 0xFF	; 255
 53a:	c5 01       	movw	r24, r10
 53c:	0e 94 28 05 	call	0xa50	; 0xa50 <strnlen>
 540:	4c 01       	movw	r8, r24
 542:	82 01       	movw	r16, r4
 544:	f3 2d       	mov	r31, r3
 546:	ff 77       	andi	r31, 0x7F	; 127
 548:	3f 2e       	mov	r3, r31
 54a:	16 c0       	rjmp	.+44     	; 0x578 <__stack+0x79>
 54c:	28 01       	movw	r4, r16
 54e:	22 e0       	ldi	r18, 0x02	; 2
 550:	42 0e       	add	r4, r18
 552:	51 1c       	adc	r5, r1
 554:	f8 01       	movw	r30, r16
 556:	a0 80       	ld	r10, Z
 558:	b1 80       	ldd	r11, Z+1	; 0x01
 55a:	36 fe       	sbrs	r3, 6
 55c:	03 c0       	rjmp	.+6      	; 0x564 <__stack+0x65>
 55e:	69 2d       	mov	r22, r9
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	02 c0       	rjmp	.+4      	; 0x568 <__stack+0x69>
 564:	6f ef       	ldi	r22, 0xFF	; 255
 566:	7f ef       	ldi	r23, 0xFF	; 255
 568:	c5 01       	movw	r24, r10
 56a:	0e 94 16 05 	call	0xa2c	; 0xa2c <strnlen_P>
 56e:	4c 01       	movw	r8, r24
 570:	f3 2d       	mov	r31, r3
 572:	f0 68       	ori	r31, 0x80	; 128
 574:	3f 2e       	mov	r3, r31
 576:	82 01       	movw	r16, r4
 578:	33 fc       	sbrc	r3, 3
 57a:	1b c0       	rjmp	.+54     	; 0x5b2 <__stack+0xb3>
 57c:	82 2d       	mov	r24, r2
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	88 16       	cp	r8, r24
 582:	99 06       	cpc	r9, r25
 584:	b0 f4       	brcc	.+44     	; 0x5b2 <__stack+0xb3>
 586:	b6 01       	movw	r22, r12
 588:	80 e2       	ldi	r24, 0x20	; 32
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 590:	2a 94       	dec	r2
 592:	f4 cf       	rjmp	.-24     	; 0x57c <__stack+0x7d>
 594:	f5 01       	movw	r30, r10
 596:	37 fc       	sbrc	r3, 7
 598:	85 91       	lpm	r24, Z+
 59a:	37 fe       	sbrs	r3, 7
 59c:	81 91       	ld	r24, Z+
 59e:	5f 01       	movw	r10, r30
 5a0:	b6 01       	movw	r22, r12
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 5a8:	21 10       	cpse	r2, r1
 5aa:	2a 94       	dec	r2
 5ac:	21 e0       	ldi	r18, 0x01	; 1
 5ae:	82 1a       	sub	r8, r18
 5b0:	91 08       	sbc	r9, r1
 5b2:	81 14       	cp	r8, r1
 5b4:	91 04       	cpc	r9, r1
 5b6:	71 f7       	brne	.-36     	; 0x594 <__stack+0x95>
 5b8:	e8 c0       	rjmp	.+464    	; 0x78a <__stack+0x28b>
 5ba:	84 36       	cpi	r24, 0x64	; 100
 5bc:	11 f0       	breq	.+4      	; 0x5c2 <__stack+0xc3>
 5be:	89 36       	cpi	r24, 0x69	; 105
 5c0:	41 f5       	brne	.+80     	; 0x612 <__stack+0x113>
 5c2:	f8 01       	movw	r30, r16
 5c4:	37 fe       	sbrs	r3, 7
 5c6:	07 c0       	rjmp	.+14     	; 0x5d6 <__stack+0xd7>
 5c8:	60 81       	ld	r22, Z
 5ca:	71 81       	ldd	r23, Z+1	; 0x01
 5cc:	82 81       	ldd	r24, Z+2	; 0x02
 5ce:	93 81       	ldd	r25, Z+3	; 0x03
 5d0:	0c 5f       	subi	r16, 0xFC	; 252
 5d2:	1f 4f       	sbci	r17, 0xFF	; 255
 5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <__stack+0xe7>
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	07 2e       	mov	r0, r23
 5dc:	00 0c       	add	r0, r0
 5de:	88 0b       	sbc	r24, r24
 5e0:	99 0b       	sbc	r25, r25
 5e2:	0e 5f       	subi	r16, 0xFE	; 254
 5e4:	1f 4f       	sbci	r17, 0xFF	; 255
 5e6:	f3 2d       	mov	r31, r3
 5e8:	ff 76       	andi	r31, 0x6F	; 111
 5ea:	3f 2e       	mov	r3, r31
 5ec:	97 ff       	sbrs	r25, 7
 5ee:	09 c0       	rjmp	.+18     	; 0x602 <__stack+0x103>
 5f0:	90 95       	com	r25
 5f2:	80 95       	com	r24
 5f4:	70 95       	com	r23
 5f6:	61 95       	neg	r22
 5f8:	7f 4f       	sbci	r23, 0xFF	; 255
 5fa:	8f 4f       	sbci	r24, 0xFF	; 255
 5fc:	9f 4f       	sbci	r25, 0xFF	; 255
 5fe:	f0 68       	ori	r31, 0x80	; 128
 600:	3f 2e       	mov	r3, r31
 602:	2a e0       	ldi	r18, 0x0A	; 10
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	a3 01       	movw	r20, r6
 608:	0e 94 6f 05 	call	0xade	; 0xade <__ultoa_invert>
 60c:	88 2e       	mov	r8, r24
 60e:	86 18       	sub	r8, r6
 610:	45 c0       	rjmp	.+138    	; 0x69c <__stack+0x19d>
 612:	85 37       	cpi	r24, 0x75	; 117
 614:	31 f4       	brne	.+12     	; 0x622 <__stack+0x123>
 616:	23 2d       	mov	r18, r3
 618:	2f 7e       	andi	r18, 0xEF	; 239
 61a:	b2 2e       	mov	r11, r18
 61c:	2a e0       	ldi	r18, 0x0A	; 10
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	25 c0       	rjmp	.+74     	; 0x66c <__stack+0x16d>
 622:	93 2d       	mov	r25, r3
 624:	99 7f       	andi	r25, 0xF9	; 249
 626:	b9 2e       	mov	r11, r25
 628:	8f 36       	cpi	r24, 0x6F	; 111
 62a:	c1 f0       	breq	.+48     	; 0x65c <__stack+0x15d>
 62c:	18 f4       	brcc	.+6      	; 0x634 <__stack+0x135>
 62e:	88 35       	cpi	r24, 0x58	; 88
 630:	79 f0       	breq	.+30     	; 0x650 <__stack+0x151>
 632:	b5 c0       	rjmp	.+362    	; 0x79e <__stack+0x29f>
 634:	80 37       	cpi	r24, 0x70	; 112
 636:	19 f0       	breq	.+6      	; 0x63e <__stack+0x13f>
 638:	88 37       	cpi	r24, 0x78	; 120
 63a:	21 f0       	breq	.+8      	; 0x644 <__stack+0x145>
 63c:	b0 c0       	rjmp	.+352    	; 0x79e <__stack+0x29f>
 63e:	e9 2f       	mov	r30, r25
 640:	e0 61       	ori	r30, 0x10	; 16
 642:	be 2e       	mov	r11, r30
 644:	b4 fe       	sbrs	r11, 4
 646:	0d c0       	rjmp	.+26     	; 0x662 <__stack+0x163>
 648:	fb 2d       	mov	r31, r11
 64a:	f4 60       	ori	r31, 0x04	; 4
 64c:	bf 2e       	mov	r11, r31
 64e:	09 c0       	rjmp	.+18     	; 0x662 <__stack+0x163>
 650:	34 fe       	sbrs	r3, 4
 652:	0a c0       	rjmp	.+20     	; 0x668 <__stack+0x169>
 654:	29 2f       	mov	r18, r25
 656:	26 60       	ori	r18, 0x06	; 6
 658:	b2 2e       	mov	r11, r18
 65a:	06 c0       	rjmp	.+12     	; 0x668 <__stack+0x169>
 65c:	28 e0       	ldi	r18, 0x08	; 8
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	05 c0       	rjmp	.+10     	; 0x66c <__stack+0x16d>
 662:	20 e1       	ldi	r18, 0x10	; 16
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	02 c0       	rjmp	.+4      	; 0x66c <__stack+0x16d>
 668:	20 e1       	ldi	r18, 0x10	; 16
 66a:	32 e0       	ldi	r19, 0x02	; 2
 66c:	f8 01       	movw	r30, r16
 66e:	b7 fe       	sbrs	r11, 7
 670:	07 c0       	rjmp	.+14     	; 0x680 <__stack+0x181>
 672:	60 81       	ld	r22, Z
 674:	71 81       	ldd	r23, Z+1	; 0x01
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	93 81       	ldd	r25, Z+3	; 0x03
 67a:	0c 5f       	subi	r16, 0xFC	; 252
 67c:	1f 4f       	sbci	r17, 0xFF	; 255
 67e:	06 c0       	rjmp	.+12     	; 0x68c <__stack+0x18d>
 680:	60 81       	ld	r22, Z
 682:	71 81       	ldd	r23, Z+1	; 0x01
 684:	80 e0       	ldi	r24, 0x00	; 0
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	0e 5f       	subi	r16, 0xFE	; 254
 68a:	1f 4f       	sbci	r17, 0xFF	; 255
 68c:	a3 01       	movw	r20, r6
 68e:	0e 94 6f 05 	call	0xade	; 0xade <__ultoa_invert>
 692:	88 2e       	mov	r8, r24
 694:	86 18       	sub	r8, r6
 696:	fb 2d       	mov	r31, r11
 698:	ff 77       	andi	r31, 0x7F	; 127
 69a:	3f 2e       	mov	r3, r31
 69c:	36 fe       	sbrs	r3, 6
 69e:	0d c0       	rjmp	.+26     	; 0x6ba <__stack+0x1bb>
 6a0:	23 2d       	mov	r18, r3
 6a2:	2e 7f       	andi	r18, 0xFE	; 254
 6a4:	a2 2e       	mov	r10, r18
 6a6:	89 14       	cp	r8, r9
 6a8:	58 f4       	brcc	.+22     	; 0x6c0 <__stack+0x1c1>
 6aa:	34 fe       	sbrs	r3, 4
 6ac:	0b c0       	rjmp	.+22     	; 0x6c4 <__stack+0x1c5>
 6ae:	32 fc       	sbrc	r3, 2
 6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <__stack+0x1c5>
 6b2:	83 2d       	mov	r24, r3
 6b4:	8e 7e       	andi	r24, 0xEE	; 238
 6b6:	a8 2e       	mov	r10, r24
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <__stack+0x1c5>
 6ba:	b8 2c       	mov	r11, r8
 6bc:	a3 2c       	mov	r10, r3
 6be:	03 c0       	rjmp	.+6      	; 0x6c6 <__stack+0x1c7>
 6c0:	b8 2c       	mov	r11, r8
 6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <__stack+0x1c7>
 6c4:	b9 2c       	mov	r11, r9
 6c6:	a4 fe       	sbrs	r10, 4
 6c8:	0f c0       	rjmp	.+30     	; 0x6e8 <__stack+0x1e9>
 6ca:	fe 01       	movw	r30, r28
 6cc:	e8 0d       	add	r30, r8
 6ce:	f1 1d       	adc	r31, r1
 6d0:	80 81       	ld	r24, Z
 6d2:	80 33       	cpi	r24, 0x30	; 48
 6d4:	21 f4       	brne	.+8      	; 0x6de <__stack+0x1df>
 6d6:	9a 2d       	mov	r25, r10
 6d8:	99 7e       	andi	r25, 0xE9	; 233
 6da:	a9 2e       	mov	r10, r25
 6dc:	09 c0       	rjmp	.+18     	; 0x6f0 <__stack+0x1f1>
 6de:	a2 fe       	sbrs	r10, 2
 6e0:	06 c0       	rjmp	.+12     	; 0x6ee <__stack+0x1ef>
 6e2:	b3 94       	inc	r11
 6e4:	b3 94       	inc	r11
 6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <__stack+0x1f1>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <__stack+0x1f1>
 6ee:	b3 94       	inc	r11
 6f0:	a3 fc       	sbrc	r10, 3
 6f2:	11 c0       	rjmp	.+34     	; 0x716 <__stack+0x217>
 6f4:	a0 fe       	sbrs	r10, 0
 6f6:	06 c0       	rjmp	.+12     	; 0x704 <__stack+0x205>
 6f8:	b2 14       	cp	r11, r2
 6fa:	88 f4       	brcc	.+34     	; 0x71e <__stack+0x21f>
 6fc:	28 0c       	add	r2, r8
 6fe:	92 2c       	mov	r9, r2
 700:	9b 18       	sub	r9, r11
 702:	0e c0       	rjmp	.+28     	; 0x720 <__stack+0x221>
 704:	b2 14       	cp	r11, r2
 706:	60 f4       	brcc	.+24     	; 0x720 <__stack+0x221>
 708:	b6 01       	movw	r22, r12
 70a:	80 e2       	ldi	r24, 0x20	; 32
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 712:	b3 94       	inc	r11
 714:	f7 cf       	rjmp	.-18     	; 0x704 <__stack+0x205>
 716:	b2 14       	cp	r11, r2
 718:	18 f4       	brcc	.+6      	; 0x720 <__stack+0x221>
 71a:	2b 18       	sub	r2, r11
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__stack+0x223>
 71e:	98 2c       	mov	r9, r8
 720:	21 2c       	mov	r2, r1
 722:	a4 fe       	sbrs	r10, 4
 724:	10 c0       	rjmp	.+32     	; 0x746 <__stack+0x247>
 726:	b6 01       	movw	r22, r12
 728:	80 e3       	ldi	r24, 0x30	; 48
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 730:	a2 fe       	sbrs	r10, 2
 732:	17 c0       	rjmp	.+46     	; 0x762 <__stack+0x263>
 734:	a1 fc       	sbrc	r10, 1
 736:	03 c0       	rjmp	.+6      	; 0x73e <__stack+0x23f>
 738:	88 e7       	ldi	r24, 0x78	; 120
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	02 c0       	rjmp	.+4      	; 0x742 <__stack+0x243>
 73e:	88 e5       	ldi	r24, 0x58	; 88
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b6 01       	movw	r22, r12
 744:	0c c0       	rjmp	.+24     	; 0x75e <__stack+0x25f>
 746:	8a 2d       	mov	r24, r10
 748:	86 78       	andi	r24, 0x86	; 134
 74a:	59 f0       	breq	.+22     	; 0x762 <__stack+0x263>
 74c:	a1 fe       	sbrs	r10, 1
 74e:	02 c0       	rjmp	.+4      	; 0x754 <__stack+0x255>
 750:	8b e2       	ldi	r24, 0x2B	; 43
 752:	01 c0       	rjmp	.+2      	; 0x756 <__stack+0x257>
 754:	80 e2       	ldi	r24, 0x20	; 32
 756:	a7 fc       	sbrc	r10, 7
 758:	8d e2       	ldi	r24, 0x2D	; 45
 75a:	b6 01       	movw	r22, r12
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 762:	89 14       	cp	r8, r9
 764:	38 f4       	brcc	.+14     	; 0x774 <__stack+0x275>
 766:	b6 01       	movw	r22, r12
 768:	80 e3       	ldi	r24, 0x30	; 48
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 770:	9a 94       	dec	r9
 772:	f7 cf       	rjmp	.-18     	; 0x762 <__stack+0x263>
 774:	8a 94       	dec	r8
 776:	f3 01       	movw	r30, r6
 778:	e8 0d       	add	r30, r8
 77a:	f1 1d       	adc	r31, r1
 77c:	80 81       	ld	r24, Z
 77e:	b6 01       	movw	r22, r12
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 786:	81 10       	cpse	r8, r1
 788:	f5 cf       	rjmp	.-22     	; 0x774 <__stack+0x275>
 78a:	22 20       	and	r2, r2
 78c:	09 f4       	brne	.+2      	; 0x790 <__stack+0x291>
 78e:	42 ce       	rjmp	.-892    	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 790:	b6 01       	movw	r22, r12
 792:	80 e2       	ldi	r24, 0x20	; 32
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 79a:	2a 94       	dec	r2
 79c:	f6 cf       	rjmp	.-20     	; 0x78a <__stack+0x28b>
 79e:	f6 01       	movw	r30, r12
 7a0:	86 81       	ldd	r24, Z+6	; 0x06
 7a2:	97 81       	ldd	r25, Z+7	; 0x07
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__stack+0x2ab>
 7a6:	8f ef       	ldi	r24, 0xFF	; 255
 7a8:	9f ef       	ldi	r25, 0xFF	; 255
 7aa:	2b 96       	adiw	r28, 0x0b	; 11
 7ac:	e2 e1       	ldi	r30, 0x12	; 18
 7ae:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__epilogue_restores__>

000007b2 <calloc>:
 7b2:	0f 93       	push	r16
 7b4:	1f 93       	push	r17
 7b6:	cf 93       	push	r28
 7b8:	df 93       	push	r29
 7ba:	86 9f       	mul	r24, r22
 7bc:	80 01       	movw	r16, r0
 7be:	87 9f       	mul	r24, r23
 7c0:	10 0d       	add	r17, r0
 7c2:	96 9f       	mul	r25, r22
 7c4:	10 0d       	add	r17, r0
 7c6:	11 24       	eor	r1, r1
 7c8:	c8 01       	movw	r24, r16
 7ca:	0e 94 f5 03 	call	0x7ea	; 0x7ea <malloc>
 7ce:	ec 01       	movw	r28, r24
 7d0:	00 97       	sbiw	r24, 0x00	; 0
 7d2:	29 f0       	breq	.+10     	; 0x7de <calloc+0x2c>
 7d4:	a8 01       	movw	r20, r16
 7d6:	60 e0       	ldi	r22, 0x00	; 0
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	0e 94 21 05 	call	0xa42	; 0xa42 <memset>
 7de:	ce 01       	movw	r24, r28
 7e0:	df 91       	pop	r29
 7e2:	cf 91       	pop	r28
 7e4:	1f 91       	pop	r17
 7e6:	0f 91       	pop	r16
 7e8:	08 95       	ret

000007ea <malloc>:
 7ea:	0f 93       	push	r16
 7ec:	1f 93       	push	r17
 7ee:	cf 93       	push	r28
 7f0:	df 93       	push	r29
 7f2:	82 30       	cpi	r24, 0x02	; 2
 7f4:	91 05       	cpc	r25, r1
 7f6:	10 f4       	brcc	.+4      	; 0x7fc <malloc+0x12>
 7f8:	82 e0       	ldi	r24, 0x02	; 2
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <__flp>
 800:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <__flp+0x1>
 804:	20 e0       	ldi	r18, 0x00	; 0
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	a0 e0       	ldi	r26, 0x00	; 0
 80a:	b0 e0       	ldi	r27, 0x00	; 0
 80c:	30 97       	sbiw	r30, 0x00	; 0
 80e:	19 f1       	breq	.+70     	; 0x856 <malloc+0x6c>
 810:	40 81       	ld	r20, Z
 812:	51 81       	ldd	r21, Z+1	; 0x01
 814:	02 81       	ldd	r16, Z+2	; 0x02
 816:	13 81       	ldd	r17, Z+3	; 0x03
 818:	48 17       	cp	r20, r24
 81a:	59 07       	cpc	r21, r25
 81c:	c8 f0       	brcs	.+50     	; 0x850 <malloc+0x66>
 81e:	84 17       	cp	r24, r20
 820:	95 07       	cpc	r25, r21
 822:	69 f4       	brne	.+26     	; 0x83e <malloc+0x54>
 824:	10 97       	sbiw	r26, 0x00	; 0
 826:	31 f0       	breq	.+12     	; 0x834 <malloc+0x4a>
 828:	12 96       	adiw	r26, 0x02	; 2
 82a:	0c 93       	st	X, r16
 82c:	12 97       	sbiw	r26, 0x02	; 2
 82e:	13 96       	adiw	r26, 0x03	; 3
 830:	1c 93       	st	X, r17
 832:	27 c0       	rjmp	.+78     	; 0x882 <malloc+0x98>
 834:	00 93 06 02 	sts	0x0206, r16	; 0x800206 <__flp>
 838:	10 93 07 02 	sts	0x0207, r17	; 0x800207 <__flp+0x1>
 83c:	22 c0       	rjmp	.+68     	; 0x882 <malloc+0x98>
 83e:	21 15       	cp	r18, r1
 840:	31 05       	cpc	r19, r1
 842:	19 f0       	breq	.+6      	; 0x84a <malloc+0x60>
 844:	42 17       	cp	r20, r18
 846:	53 07       	cpc	r21, r19
 848:	18 f4       	brcc	.+6      	; 0x850 <malloc+0x66>
 84a:	9a 01       	movw	r18, r20
 84c:	bd 01       	movw	r22, r26
 84e:	ef 01       	movw	r28, r30
 850:	df 01       	movw	r26, r30
 852:	f8 01       	movw	r30, r16
 854:	db cf       	rjmp	.-74     	; 0x80c <malloc+0x22>
 856:	21 15       	cp	r18, r1
 858:	31 05       	cpc	r19, r1
 85a:	f9 f0       	breq	.+62     	; 0x89a <malloc+0xb0>
 85c:	28 1b       	sub	r18, r24
 85e:	39 0b       	sbc	r19, r25
 860:	24 30       	cpi	r18, 0x04	; 4
 862:	31 05       	cpc	r19, r1
 864:	80 f4       	brcc	.+32     	; 0x886 <malloc+0x9c>
 866:	8a 81       	ldd	r24, Y+2	; 0x02
 868:	9b 81       	ldd	r25, Y+3	; 0x03
 86a:	61 15       	cp	r22, r1
 86c:	71 05       	cpc	r23, r1
 86e:	21 f0       	breq	.+8      	; 0x878 <malloc+0x8e>
 870:	fb 01       	movw	r30, r22
 872:	93 83       	std	Z+3, r25	; 0x03
 874:	82 83       	std	Z+2, r24	; 0x02
 876:	04 c0       	rjmp	.+8      	; 0x880 <malloc+0x96>
 878:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <__flp+0x1>
 87c:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__flp>
 880:	fe 01       	movw	r30, r28
 882:	32 96       	adiw	r30, 0x02	; 2
 884:	44 c0       	rjmp	.+136    	; 0x90e <malloc+0x124>
 886:	fe 01       	movw	r30, r28
 888:	e2 0f       	add	r30, r18
 88a:	f3 1f       	adc	r31, r19
 88c:	81 93       	st	Z+, r24
 88e:	91 93       	st	Z+, r25
 890:	22 50       	subi	r18, 0x02	; 2
 892:	31 09       	sbc	r19, r1
 894:	39 83       	std	Y+1, r19	; 0x01
 896:	28 83       	st	Y, r18
 898:	3a c0       	rjmp	.+116    	; 0x90e <malloc+0x124>
 89a:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 89e:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 8a2:	23 2b       	or	r18, r19
 8a4:	41 f4       	brne	.+16     	; 0x8b6 <malloc+0xcc>
 8a6:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 8aa:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 8ae:	30 93 05 02 	sts	0x0205, r19	; 0x800205 <__brkval+0x1>
 8b2:	20 93 04 02 	sts	0x0204, r18	; 0x800204 <__brkval>
 8b6:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 8ba:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 8be:	21 15       	cp	r18, r1
 8c0:	31 05       	cpc	r19, r1
 8c2:	41 f4       	brne	.+16     	; 0x8d4 <malloc+0xea>
 8c4:	2d b7       	in	r18, 0x3d	; 61
 8c6:	3e b7       	in	r19, 0x3e	; 62
 8c8:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8cc:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8d0:	24 1b       	sub	r18, r20
 8d2:	35 0b       	sbc	r19, r21
 8d4:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <__brkval>
 8d8:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <__brkval+0x1>
 8dc:	e2 17       	cp	r30, r18
 8de:	f3 07       	cpc	r31, r19
 8e0:	a0 f4       	brcc	.+40     	; 0x90a <malloc+0x120>
 8e2:	2e 1b       	sub	r18, r30
 8e4:	3f 0b       	sbc	r19, r31
 8e6:	28 17       	cp	r18, r24
 8e8:	39 07       	cpc	r19, r25
 8ea:	78 f0       	brcs	.+30     	; 0x90a <malloc+0x120>
 8ec:	ac 01       	movw	r20, r24
 8ee:	4e 5f       	subi	r20, 0xFE	; 254
 8f0:	5f 4f       	sbci	r21, 0xFF	; 255
 8f2:	24 17       	cp	r18, r20
 8f4:	35 07       	cpc	r19, r21
 8f6:	48 f0       	brcs	.+18     	; 0x90a <malloc+0x120>
 8f8:	4e 0f       	add	r20, r30
 8fa:	5f 1f       	adc	r21, r31
 8fc:	50 93 05 02 	sts	0x0205, r21	; 0x800205 <__brkval+0x1>
 900:	40 93 04 02 	sts	0x0204, r20	; 0x800204 <__brkval>
 904:	81 93       	st	Z+, r24
 906:	91 93       	st	Z+, r25
 908:	02 c0       	rjmp	.+4      	; 0x90e <malloc+0x124>
 90a:	e0 e0       	ldi	r30, 0x00	; 0
 90c:	f0 e0       	ldi	r31, 0x00	; 0
 90e:	cf 01       	movw	r24, r30
 910:	df 91       	pop	r29
 912:	cf 91       	pop	r28
 914:	1f 91       	pop	r17
 916:	0f 91       	pop	r16
 918:	08 95       	ret

0000091a <free>:
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	00 97       	sbiw	r24, 0x00	; 0
 920:	09 f4       	brne	.+2      	; 0x924 <free+0xa>
 922:	81 c0       	rjmp	.+258    	; 0xa26 <free+0x10c>
 924:	fc 01       	movw	r30, r24
 926:	32 97       	sbiw	r30, 0x02	; 2
 928:	13 82       	std	Z+3, r1	; 0x03
 92a:	12 82       	std	Z+2, r1	; 0x02
 92c:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <__flp>
 930:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <__flp+0x1>
 934:	10 97       	sbiw	r26, 0x00	; 0
 936:	81 f4       	brne	.+32     	; 0x958 <free+0x3e>
 938:	20 81       	ld	r18, Z
 93a:	31 81       	ldd	r19, Z+1	; 0x01
 93c:	82 0f       	add	r24, r18
 93e:	93 1f       	adc	r25, r19
 940:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 944:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 948:	28 17       	cp	r18, r24
 94a:	39 07       	cpc	r19, r25
 94c:	51 f5       	brne	.+84     	; 0x9a2 <free+0x88>
 94e:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__brkval+0x1>
 952:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__brkval>
 956:	67 c0       	rjmp	.+206    	; 0xa26 <free+0x10c>
 958:	ed 01       	movw	r28, r26
 95a:	20 e0       	ldi	r18, 0x00	; 0
 95c:	30 e0       	ldi	r19, 0x00	; 0
 95e:	ce 17       	cp	r28, r30
 960:	df 07       	cpc	r29, r31
 962:	40 f4       	brcc	.+16     	; 0x974 <free+0x5a>
 964:	4a 81       	ldd	r20, Y+2	; 0x02
 966:	5b 81       	ldd	r21, Y+3	; 0x03
 968:	9e 01       	movw	r18, r28
 96a:	41 15       	cp	r20, r1
 96c:	51 05       	cpc	r21, r1
 96e:	f1 f0       	breq	.+60     	; 0x9ac <free+0x92>
 970:	ea 01       	movw	r28, r20
 972:	f5 cf       	rjmp	.-22     	; 0x95e <free+0x44>
 974:	d3 83       	std	Z+3, r29	; 0x03
 976:	c2 83       	std	Z+2, r28	; 0x02
 978:	40 81       	ld	r20, Z
 97a:	51 81       	ldd	r21, Z+1	; 0x01
 97c:	84 0f       	add	r24, r20
 97e:	95 1f       	adc	r25, r21
 980:	c8 17       	cp	r28, r24
 982:	d9 07       	cpc	r29, r25
 984:	59 f4       	brne	.+22     	; 0x99c <free+0x82>
 986:	88 81       	ld	r24, Y
 988:	99 81       	ldd	r25, Y+1	; 0x01
 98a:	84 0f       	add	r24, r20
 98c:	95 1f       	adc	r25, r21
 98e:	02 96       	adiw	r24, 0x02	; 2
 990:	91 83       	std	Z+1, r25	; 0x01
 992:	80 83       	st	Z, r24
 994:	8a 81       	ldd	r24, Y+2	; 0x02
 996:	9b 81       	ldd	r25, Y+3	; 0x03
 998:	93 83       	std	Z+3, r25	; 0x03
 99a:	82 83       	std	Z+2, r24	; 0x02
 99c:	21 15       	cp	r18, r1
 99e:	31 05       	cpc	r19, r1
 9a0:	29 f4       	brne	.+10     	; 0x9ac <free+0x92>
 9a2:	f0 93 07 02 	sts	0x0207, r31	; 0x800207 <__flp+0x1>
 9a6:	e0 93 06 02 	sts	0x0206, r30	; 0x800206 <__flp>
 9aa:	3d c0       	rjmp	.+122    	; 0xa26 <free+0x10c>
 9ac:	e9 01       	movw	r28, r18
 9ae:	fb 83       	std	Y+3, r31	; 0x03
 9b0:	ea 83       	std	Y+2, r30	; 0x02
 9b2:	49 91       	ld	r20, Y+
 9b4:	59 91       	ld	r21, Y+
 9b6:	c4 0f       	add	r28, r20
 9b8:	d5 1f       	adc	r29, r21
 9ba:	ec 17       	cp	r30, r28
 9bc:	fd 07       	cpc	r31, r29
 9be:	61 f4       	brne	.+24     	; 0x9d8 <free+0xbe>
 9c0:	80 81       	ld	r24, Z
 9c2:	91 81       	ldd	r25, Z+1	; 0x01
 9c4:	84 0f       	add	r24, r20
 9c6:	95 1f       	adc	r25, r21
 9c8:	02 96       	adiw	r24, 0x02	; 2
 9ca:	e9 01       	movw	r28, r18
 9cc:	99 83       	std	Y+1, r25	; 0x01
 9ce:	88 83       	st	Y, r24
 9d0:	82 81       	ldd	r24, Z+2	; 0x02
 9d2:	93 81       	ldd	r25, Z+3	; 0x03
 9d4:	9b 83       	std	Y+3, r25	; 0x03
 9d6:	8a 83       	std	Y+2, r24	; 0x02
 9d8:	e0 e0       	ldi	r30, 0x00	; 0
 9da:	f0 e0       	ldi	r31, 0x00	; 0
 9dc:	12 96       	adiw	r26, 0x02	; 2
 9de:	8d 91       	ld	r24, X+
 9e0:	9c 91       	ld	r25, X
 9e2:	13 97       	sbiw	r26, 0x03	; 3
 9e4:	00 97       	sbiw	r24, 0x00	; 0
 9e6:	19 f0       	breq	.+6      	; 0x9ee <free+0xd4>
 9e8:	fd 01       	movw	r30, r26
 9ea:	dc 01       	movw	r26, r24
 9ec:	f7 cf       	rjmp	.-18     	; 0x9dc <free+0xc2>
 9ee:	8d 91       	ld	r24, X+
 9f0:	9c 91       	ld	r25, X
 9f2:	11 97       	sbiw	r26, 0x01	; 1
 9f4:	9d 01       	movw	r18, r26
 9f6:	2e 5f       	subi	r18, 0xFE	; 254
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	82 0f       	add	r24, r18
 9fc:	93 1f       	adc	r25, r19
 9fe:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__brkval>
 a02:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__brkval+0x1>
 a06:	28 17       	cp	r18, r24
 a08:	39 07       	cpc	r19, r25
 a0a:	69 f4       	brne	.+26     	; 0xa26 <free+0x10c>
 a0c:	30 97       	sbiw	r30, 0x00	; 0
 a0e:	29 f4       	brne	.+10     	; 0xa1a <free+0x100>
 a10:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <__flp+0x1>
 a14:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <__flp>
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <free+0x104>
 a1a:	13 82       	std	Z+3, r1	; 0x03
 a1c:	12 82       	std	Z+2, r1	; 0x02
 a1e:	b0 93 05 02 	sts	0x0205, r27	; 0x800205 <__brkval+0x1>
 a22:	a0 93 04 02 	sts	0x0204, r26	; 0x800204 <__brkval>
 a26:	df 91       	pop	r29
 a28:	cf 91       	pop	r28
 a2a:	08 95       	ret

00000a2c <strnlen_P>:
 a2c:	fc 01       	movw	r30, r24
 a2e:	05 90       	lpm	r0, Z+
 a30:	61 50       	subi	r22, 0x01	; 1
 a32:	70 40       	sbci	r23, 0x00	; 0
 a34:	01 10       	cpse	r0, r1
 a36:	d8 f7       	brcc	.-10     	; 0xa2e <strnlen_P+0x2>
 a38:	80 95       	com	r24
 a3a:	90 95       	com	r25
 a3c:	8e 0f       	add	r24, r30
 a3e:	9f 1f       	adc	r25, r31
 a40:	08 95       	ret

00000a42 <memset>:
 a42:	dc 01       	movw	r26, r24
 a44:	01 c0       	rjmp	.+2      	; 0xa48 <memset+0x6>
 a46:	6d 93       	st	X+, r22
 a48:	41 50       	subi	r20, 0x01	; 1
 a4a:	50 40       	sbci	r21, 0x00	; 0
 a4c:	e0 f7       	brcc	.-8      	; 0xa46 <memset+0x4>
 a4e:	08 95       	ret

00000a50 <strnlen>:
 a50:	fc 01       	movw	r30, r24
 a52:	61 50       	subi	r22, 0x01	; 1
 a54:	70 40       	sbci	r23, 0x00	; 0
 a56:	01 90       	ld	r0, Z+
 a58:	01 10       	cpse	r0, r1
 a5a:	d8 f7       	brcc	.-10     	; 0xa52 <strnlen+0x2>
 a5c:	80 95       	com	r24
 a5e:	90 95       	com	r25
 a60:	8e 0f       	add	r24, r30
 a62:	9f 1f       	adc	r25, r31
 a64:	08 95       	ret

00000a66 <fputc>:
 a66:	0f 93       	push	r16
 a68:	1f 93       	push	r17
 a6a:	cf 93       	push	r28
 a6c:	df 93       	push	r29
 a6e:	fb 01       	movw	r30, r22
 a70:	23 81       	ldd	r18, Z+3	; 0x03
 a72:	21 fd       	sbrc	r18, 1
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <fputc+0x16>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	9f ef       	ldi	r25, 0xFF	; 255
 a7a:	2c c0       	rjmp	.+88     	; 0xad4 <fputc+0x6e>
 a7c:	22 ff       	sbrs	r18, 2
 a7e:	16 c0       	rjmp	.+44     	; 0xaac <fputc+0x46>
 a80:	46 81       	ldd	r20, Z+6	; 0x06
 a82:	57 81       	ldd	r21, Z+7	; 0x07
 a84:	24 81       	ldd	r18, Z+4	; 0x04
 a86:	35 81       	ldd	r19, Z+5	; 0x05
 a88:	42 17       	cp	r20, r18
 a8a:	53 07       	cpc	r21, r19
 a8c:	44 f4       	brge	.+16     	; 0xa9e <fputc+0x38>
 a8e:	a0 81       	ld	r26, Z
 a90:	b1 81       	ldd	r27, Z+1	; 0x01
 a92:	9d 01       	movw	r18, r26
 a94:	2f 5f       	subi	r18, 0xFF	; 255
 a96:	3f 4f       	sbci	r19, 0xFF	; 255
 a98:	31 83       	std	Z+1, r19	; 0x01
 a9a:	20 83       	st	Z, r18
 a9c:	8c 93       	st	X, r24
 a9e:	26 81       	ldd	r18, Z+6	; 0x06
 aa0:	37 81       	ldd	r19, Z+7	; 0x07
 aa2:	2f 5f       	subi	r18, 0xFF	; 255
 aa4:	3f 4f       	sbci	r19, 0xFF	; 255
 aa6:	37 83       	std	Z+7, r19	; 0x07
 aa8:	26 83       	std	Z+6, r18	; 0x06
 aaa:	14 c0       	rjmp	.+40     	; 0xad4 <fputc+0x6e>
 aac:	8b 01       	movw	r16, r22
 aae:	ec 01       	movw	r28, r24
 ab0:	fb 01       	movw	r30, r22
 ab2:	00 84       	ldd	r0, Z+8	; 0x08
 ab4:	f1 85       	ldd	r31, Z+9	; 0x09
 ab6:	e0 2d       	mov	r30, r0
 ab8:	09 95       	icall
 aba:	89 2b       	or	r24, r25
 abc:	e1 f6       	brne	.-72     	; 0xa76 <fputc+0x10>
 abe:	d8 01       	movw	r26, r16
 ac0:	16 96       	adiw	r26, 0x06	; 6
 ac2:	8d 91       	ld	r24, X+
 ac4:	9c 91       	ld	r25, X
 ac6:	17 97       	sbiw	r26, 0x07	; 7
 ac8:	01 96       	adiw	r24, 0x01	; 1
 aca:	17 96       	adiw	r26, 0x07	; 7
 acc:	9c 93       	st	X, r25
 ace:	8e 93       	st	-X, r24
 ad0:	16 97       	sbiw	r26, 0x06	; 6
 ad2:	ce 01       	movw	r24, r28
 ad4:	df 91       	pop	r29
 ad6:	cf 91       	pop	r28
 ad8:	1f 91       	pop	r17
 ada:	0f 91       	pop	r16
 adc:	08 95       	ret

00000ade <__ultoa_invert>:
 ade:	fa 01       	movw	r30, r20
 ae0:	aa 27       	eor	r26, r26
 ae2:	28 30       	cpi	r18, 0x08	; 8
 ae4:	51 f1       	breq	.+84     	; 0xb3a <__ultoa_invert+0x5c>
 ae6:	20 31       	cpi	r18, 0x10	; 16
 ae8:	81 f1       	breq	.+96     	; 0xb4a <__ultoa_invert+0x6c>
 aea:	e8 94       	clt
 aec:	6f 93       	push	r22
 aee:	6e 7f       	andi	r22, 0xFE	; 254
 af0:	6e 5f       	subi	r22, 0xFE	; 254
 af2:	7f 4f       	sbci	r23, 0xFF	; 255
 af4:	8f 4f       	sbci	r24, 0xFF	; 255
 af6:	9f 4f       	sbci	r25, 0xFF	; 255
 af8:	af 4f       	sbci	r26, 0xFF	; 255
 afa:	b1 e0       	ldi	r27, 0x01	; 1
 afc:	3e d0       	rcall	.+124    	; 0xb7a <__ultoa_invert+0x9c>
 afe:	b4 e0       	ldi	r27, 0x04	; 4
 b00:	3c d0       	rcall	.+120    	; 0xb7a <__ultoa_invert+0x9c>
 b02:	67 0f       	add	r22, r23
 b04:	78 1f       	adc	r23, r24
 b06:	89 1f       	adc	r24, r25
 b08:	9a 1f       	adc	r25, r26
 b0a:	a1 1d       	adc	r26, r1
 b0c:	68 0f       	add	r22, r24
 b0e:	79 1f       	adc	r23, r25
 b10:	8a 1f       	adc	r24, r26
 b12:	91 1d       	adc	r25, r1
 b14:	a1 1d       	adc	r26, r1
 b16:	6a 0f       	add	r22, r26
 b18:	71 1d       	adc	r23, r1
 b1a:	81 1d       	adc	r24, r1
 b1c:	91 1d       	adc	r25, r1
 b1e:	a1 1d       	adc	r26, r1
 b20:	20 d0       	rcall	.+64     	; 0xb62 <__ultoa_invert+0x84>
 b22:	09 f4       	brne	.+2      	; 0xb26 <__ultoa_invert+0x48>
 b24:	68 94       	set
 b26:	3f 91       	pop	r19
 b28:	2a e0       	ldi	r18, 0x0A	; 10
 b2a:	26 9f       	mul	r18, r22
 b2c:	11 24       	eor	r1, r1
 b2e:	30 19       	sub	r19, r0
 b30:	30 5d       	subi	r19, 0xD0	; 208
 b32:	31 93       	st	Z+, r19
 b34:	de f6       	brtc	.-74     	; 0xaec <__ultoa_invert+0xe>
 b36:	cf 01       	movw	r24, r30
 b38:	08 95       	ret
 b3a:	46 2f       	mov	r20, r22
 b3c:	47 70       	andi	r20, 0x07	; 7
 b3e:	40 5d       	subi	r20, 0xD0	; 208
 b40:	41 93       	st	Z+, r20
 b42:	b3 e0       	ldi	r27, 0x03	; 3
 b44:	0f d0       	rcall	.+30     	; 0xb64 <__ultoa_invert+0x86>
 b46:	c9 f7       	brne	.-14     	; 0xb3a <__ultoa_invert+0x5c>
 b48:	f6 cf       	rjmp	.-20     	; 0xb36 <__ultoa_invert+0x58>
 b4a:	46 2f       	mov	r20, r22
 b4c:	4f 70       	andi	r20, 0x0F	; 15
 b4e:	40 5d       	subi	r20, 0xD0	; 208
 b50:	4a 33       	cpi	r20, 0x3A	; 58
 b52:	18 f0       	brcs	.+6      	; 0xb5a <__ultoa_invert+0x7c>
 b54:	49 5d       	subi	r20, 0xD9	; 217
 b56:	31 fd       	sbrc	r19, 1
 b58:	40 52       	subi	r20, 0x20	; 32
 b5a:	41 93       	st	Z+, r20
 b5c:	02 d0       	rcall	.+4      	; 0xb62 <__ultoa_invert+0x84>
 b5e:	a9 f7       	brne	.-22     	; 0xb4a <__ultoa_invert+0x6c>
 b60:	ea cf       	rjmp	.-44     	; 0xb36 <__ultoa_invert+0x58>
 b62:	b4 e0       	ldi	r27, 0x04	; 4
 b64:	a6 95       	lsr	r26
 b66:	97 95       	ror	r25
 b68:	87 95       	ror	r24
 b6a:	77 95       	ror	r23
 b6c:	67 95       	ror	r22
 b6e:	ba 95       	dec	r27
 b70:	c9 f7       	brne	.-14     	; 0xb64 <__ultoa_invert+0x86>
 b72:	00 97       	sbiw	r24, 0x00	; 0
 b74:	61 05       	cpc	r22, r1
 b76:	71 05       	cpc	r23, r1
 b78:	08 95       	ret
 b7a:	9b 01       	movw	r18, r22
 b7c:	ac 01       	movw	r20, r24
 b7e:	0a 2e       	mov	r0, r26
 b80:	06 94       	lsr	r0
 b82:	57 95       	ror	r21
 b84:	47 95       	ror	r20
 b86:	37 95       	ror	r19
 b88:	27 95       	ror	r18
 b8a:	ba 95       	dec	r27
 b8c:	c9 f7       	brne	.-14     	; 0xb80 <__ultoa_invert+0xa2>
 b8e:	62 0f       	add	r22, r18
 b90:	73 1f       	adc	r23, r19
 b92:	84 1f       	adc	r24, r20
 b94:	95 1f       	adc	r25, r21
 b96:	a0 1d       	adc	r26, r0
 b98:	08 95       	ret

00000b9a <__divmodsi4>:
 b9a:	05 2e       	mov	r0, r21
 b9c:	97 fb       	bst	r25, 7
 b9e:	1e f4       	brtc	.+6      	; 0xba6 <__divmodsi4+0xc>
 ba0:	00 94       	com	r0
 ba2:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__negsi2>
 ba6:	57 fd       	sbrc	r21, 7
 ba8:	07 d0       	rcall	.+14     	; 0xbb8 <__divmodsi4_neg2>
 baa:	0e 94 36 06 	call	0xc6c	; 0xc6c <__udivmodsi4>
 bae:	07 fc       	sbrc	r0, 7
 bb0:	03 d0       	rcall	.+6      	; 0xbb8 <__divmodsi4_neg2>
 bb2:	4e f4       	brtc	.+18     	; 0xbc6 <__divmodsi4_exit>
 bb4:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__negsi2>

00000bb8 <__divmodsi4_neg2>:
 bb8:	50 95       	com	r21
 bba:	40 95       	com	r20
 bbc:	30 95       	com	r19
 bbe:	21 95       	neg	r18
 bc0:	3f 4f       	sbci	r19, 0xFF	; 255
 bc2:	4f 4f       	sbci	r20, 0xFF	; 255
 bc4:	5f 4f       	sbci	r21, 0xFF	; 255

00000bc6 <__divmodsi4_exit>:
 bc6:	08 95       	ret

00000bc8 <__negsi2>:
 bc8:	90 95       	com	r25
 bca:	80 95       	com	r24
 bcc:	70 95       	com	r23
 bce:	61 95       	neg	r22
 bd0:	7f 4f       	sbci	r23, 0xFF	; 255
 bd2:	8f 4f       	sbci	r24, 0xFF	; 255
 bd4:	9f 4f       	sbci	r25, 0xFF	; 255
 bd6:	08 95       	ret

00000bd8 <__muluhisi3>:
 bd8:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__umulhisi3>
 bdc:	a5 9f       	mul	r26, r21
 bde:	90 0d       	add	r25, r0
 be0:	b4 9f       	mul	r27, r20
 be2:	90 0d       	add	r25, r0
 be4:	a4 9f       	mul	r26, r20
 be6:	80 0d       	add	r24, r0
 be8:	91 1d       	adc	r25, r1
 bea:	11 24       	eor	r1, r1
 bec:	08 95       	ret

00000bee <__mulshisi3>:
 bee:	b7 ff       	sbrs	r27, 7
 bf0:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__muluhisi3>

00000bf4 <__mulohisi3>:
 bf4:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__muluhisi3>
 bf8:	82 1b       	sub	r24, r18
 bfa:	93 0b       	sbc	r25, r19
 bfc:	08 95       	ret

00000bfe <__prologue_saves__>:
 bfe:	2f 92       	push	r2
 c00:	3f 92       	push	r3
 c02:	4f 92       	push	r4
 c04:	5f 92       	push	r5
 c06:	6f 92       	push	r6
 c08:	7f 92       	push	r7
 c0a:	8f 92       	push	r8
 c0c:	9f 92       	push	r9
 c0e:	af 92       	push	r10
 c10:	bf 92       	push	r11
 c12:	cf 92       	push	r12
 c14:	df 92       	push	r13
 c16:	ef 92       	push	r14
 c18:	ff 92       	push	r15
 c1a:	0f 93       	push	r16
 c1c:	1f 93       	push	r17
 c1e:	cf 93       	push	r28
 c20:	df 93       	push	r29
 c22:	cd b7       	in	r28, 0x3d	; 61
 c24:	de b7       	in	r29, 0x3e	; 62
 c26:	ca 1b       	sub	r28, r26
 c28:	db 0b       	sbc	r29, r27
 c2a:	0f b6       	in	r0, 0x3f	; 63
 c2c:	f8 94       	cli
 c2e:	de bf       	out	0x3e, r29	; 62
 c30:	0f be       	out	0x3f, r0	; 63
 c32:	cd bf       	out	0x3d, r28	; 61
 c34:	09 94       	ijmp

00000c36 <__epilogue_restores__>:
 c36:	2a 88       	ldd	r2, Y+18	; 0x12
 c38:	39 88       	ldd	r3, Y+17	; 0x11
 c3a:	48 88       	ldd	r4, Y+16	; 0x10
 c3c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c3e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c40:	7d 84       	ldd	r7, Y+13	; 0x0d
 c42:	8c 84       	ldd	r8, Y+12	; 0x0c
 c44:	9b 84       	ldd	r9, Y+11	; 0x0b
 c46:	aa 84       	ldd	r10, Y+10	; 0x0a
 c48:	b9 84       	ldd	r11, Y+9	; 0x09
 c4a:	c8 84       	ldd	r12, Y+8	; 0x08
 c4c:	df 80       	ldd	r13, Y+7	; 0x07
 c4e:	ee 80       	ldd	r14, Y+6	; 0x06
 c50:	fd 80       	ldd	r15, Y+5	; 0x05
 c52:	0c 81       	ldd	r16, Y+4	; 0x04
 c54:	1b 81       	ldd	r17, Y+3	; 0x03
 c56:	aa 81       	ldd	r26, Y+2	; 0x02
 c58:	b9 81       	ldd	r27, Y+1	; 0x01
 c5a:	ce 0f       	add	r28, r30
 c5c:	d1 1d       	adc	r29, r1
 c5e:	0f b6       	in	r0, 0x3f	; 63
 c60:	f8 94       	cli
 c62:	de bf       	out	0x3e, r29	; 62
 c64:	0f be       	out	0x3f, r0	; 63
 c66:	cd bf       	out	0x3d, r28	; 61
 c68:	ed 01       	movw	r28, r26
 c6a:	08 95       	ret

00000c6c <__udivmodsi4>:
 c6c:	a1 e2       	ldi	r26, 0x21	; 33
 c6e:	1a 2e       	mov	r1, r26
 c70:	aa 1b       	sub	r26, r26
 c72:	bb 1b       	sub	r27, r27
 c74:	fd 01       	movw	r30, r26
 c76:	0d c0       	rjmp	.+26     	; 0xc92 <__udivmodsi4_ep>

00000c78 <__udivmodsi4_loop>:
 c78:	aa 1f       	adc	r26, r26
 c7a:	bb 1f       	adc	r27, r27
 c7c:	ee 1f       	adc	r30, r30
 c7e:	ff 1f       	adc	r31, r31
 c80:	a2 17       	cp	r26, r18
 c82:	b3 07       	cpc	r27, r19
 c84:	e4 07       	cpc	r30, r20
 c86:	f5 07       	cpc	r31, r21
 c88:	20 f0       	brcs	.+8      	; 0xc92 <__udivmodsi4_ep>
 c8a:	a2 1b       	sub	r26, r18
 c8c:	b3 0b       	sbc	r27, r19
 c8e:	e4 0b       	sbc	r30, r20
 c90:	f5 0b       	sbc	r31, r21

00000c92 <__udivmodsi4_ep>:
 c92:	66 1f       	adc	r22, r22
 c94:	77 1f       	adc	r23, r23
 c96:	88 1f       	adc	r24, r24
 c98:	99 1f       	adc	r25, r25
 c9a:	1a 94       	dec	r1
 c9c:	69 f7       	brne	.-38     	; 0xc78 <__udivmodsi4_loop>
 c9e:	60 95       	com	r22
 ca0:	70 95       	com	r23
 ca2:	80 95       	com	r24
 ca4:	90 95       	com	r25
 ca6:	9b 01       	movw	r18, r22
 ca8:	ac 01       	movw	r20, r24
 caa:	bd 01       	movw	r22, r26
 cac:	cf 01       	movw	r24, r30
 cae:	08 95       	ret

00000cb0 <__umulhisi3>:
 cb0:	a2 9f       	mul	r26, r18
 cb2:	b0 01       	movw	r22, r0
 cb4:	b3 9f       	mul	r27, r19
 cb6:	c0 01       	movw	r24, r0
 cb8:	a3 9f       	mul	r26, r19
 cba:	70 0d       	add	r23, r0
 cbc:	81 1d       	adc	r24, r1
 cbe:	11 24       	eor	r1, r1
 cc0:	91 1d       	adc	r25, r1
 cc2:	b2 9f       	mul	r27, r18
 cc4:	70 0d       	add	r23, r0
 cc6:	81 1d       	adc	r24, r1
 cc8:	11 24       	eor	r1, r1
 cca:	91 1d       	adc	r25, r1
 ccc:	08 95       	ret

00000cce <_exit>:
 cce:	f8 94       	cli

00000cd0 <__stop_program>:
 cd0:	ff cf       	rjmp	.-2      	; 0xcd0 <__stop_program>
